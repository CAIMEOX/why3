import "smt-libv2.drv"
import "smt-libv2-bv.gen"
import "smt-libv2-floats.gen"

(* TODO : add bv operators that are define with axioms using to_int *)

(* printer "colibri" *)

transformation "inline_trivial"
transformation "eliminate_builtin"
(* transformation "inline_all"     *)
transformation "detect_polymorphism"
transformation "eliminate_definition_if_poly"
transformation "eliminate_inductive"
transformation "eliminate_algebraic_if_poly"
transformation "eliminate_epsilon"

(* transformation "discriminate_if_poly" *)
(* transformation "encoding_smt_if_poly" *)

transformation "introduce_premises"
transformation "eliminate_unknown_types"
transformation "fold_defs"

transformation "simplify_formula"
(* transformation "simplify_unknown_lsymbols" *)
transformation "simplify_trivial_quantification"

transformation "abstract_quantifiers"
transformation "eliminate_unknown_lsymbols"
transformation "eliminate_symbol"

transformation "discriminate_if_poly"
transformation "encoding_smt_if_poly"

theory ieee_float.RoundingMode
  meta "ls:eliminate" function RNA
end

theory ieee_float.Float64
  syntax function of_int "((_ to_fp 11 53) %1 (to_real %2))"
end

theory ieee_float.Float32
  syntax function of_int "((_ to_fp 8 24) %1 (to_real %2))"
end

theory bv.BV_Gen
  meta "ls:eliminate" function of_int
  meta "ls:eliminate" function to_uint

  remove prop Nth_bv_is_nth
  remove prop Nth_bv_is_nth2
end
