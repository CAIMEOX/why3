use int.Int

predicate p int
predicate q int
predicate r int
constant i : int
constant x_file : int

goal G :  p i

axiom H1 : q i

goal G1 : p i

axiom H2 : r x_file

goal G2 : p i

axiom H3 : q i -> r x_file

goal G3 : p i

let rec function sum (n : int)
    requires { n >= 0 }
    variant { n }
    =
    if n = 0 then 0
    else n + sum (n-1)

goal G4 : forall n. n >= 0 -> 2 * sum n = n * (n+1)

