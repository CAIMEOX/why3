<theory name="set.Cardinal" realize="true"><realized><require name="why3.BuiltIn.BuiltIn"/><require name="int.Int"/><require name="set.Set"/><require name="map.Map"/><require name="map.Const"/></realized><typedecl name="unit" altname="unit" path="why3.Unit.Unit"><params/><prodt/></typedecl><param name="is_finite" altname="is_finite" path="set.Cardinal"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></param><lemma name="is_finite_empty" altname="is_finite_empty" path="set.Cardinal"><prems><app><const name="is_empty" path="set.Set"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></prems><concls><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></concls></lemma><lemma name="is_finite_subset" altname="is_finite_subset" path="set.Cardinal"><prems><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="subset" path="set.Set"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></prems><concls><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></concls></lemma><lemma name="is_finite_add" altname="is_finite_add" path="set.Cardinal"><prems><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></prems><concls><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><app><const name="Fun.fun_upd"/><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="x"><tvar name="a"/></var><const name="HOL.True"/></app></app></concls></lemma><lemma name="is_finite_add_rev" altname="is_finite_add_rev" path="set.Cardinal"><prems><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><app><const name="Fun.fun_upd"/><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="x"><tvar name="a"/></var><const name="HOL.True"/></app></app></prems><concls><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></concls></lemma><lemma name="is_finite_singleton" altname="is_finite_singleton" path="set.Cardinal"><prems/><concls><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><app><const name="Fun.fun_upd"/><app><const name="const" path="map.Const"><fun><type name="HOL.bool"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></const><const name="HOL.False"/></app><var name="x"><tvar name="a"/></var><const name="HOL.True"/></app></app></concls></lemma><lemma name="is_finite_remove" altname="is_finite_remove" path="set.Cardinal"><prems><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></prems><concls><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><app><const name="Fun.fun_upd"/><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="x"><tvar name="a"/></var><const name="HOL.False"/></app></app></concls></lemma><lemma name="is_finite_remove_rev" altname="is_finite_remove_rev" path="set.Cardinal"><prems><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><app><const name="Fun.fun_upd"/><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="x"><tvar name="a"/></var><const name="HOL.False"/></app></app></prems><concls><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></concls></lemma><lemma name="is_finite_union" altname="is_finite_union" path="set.Cardinal"><prems><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></prems><concls><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><app><const name="union" path="set.Set"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></concls></lemma><lemma name="is_finite_union_rev" altname="is_finite_union_rev" path="set.Cardinal"><prems><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><app><const name="union" path="set.Set"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></prems><concls><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></concls></lemma><lemma name="is_finite_inter_left" altname="is_finite_inter_left" path="set.Cardinal"><prems><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></prems><concls><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><app><const name="inter" path="set.Set"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></concls></lemma><lemma name="is_finite_inter_right" altname="is_finite_inter_right" path="set.Cardinal"><prems><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></prems><concls><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><app><const name="inter" path="set.Set"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></concls></lemma><lemma name="is_finite_diff" altname="is_finite_diff" path="set.Cardinal"><prems><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></prems><concls><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><app><const name="diff" path="set.Set"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></concls></lemma><lemma name="is_finite_map" altname="is_finite_map" path="set.Cardinal"><prems><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></prems><concls><app><const name="is_finite" local="true"><pred><fun><tvar name="b"/><type name="HOL.bool"/></fun></pred></const><app><const name="map" path="set.Set"><fun><fun><tvar name="a"/><tvar name="b"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="b"/><type name="HOL.bool"/></fun></fun></const><var name="f"><fun><tvar name="a"/><tvar name="b"/></fun></var><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></concls></lemma><lemma name="is_finite_product" altname="is_finite_product" path="set.Cardinal"><prems><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="is_finite" local="true"><pred><fun><tvar name="b"/><type name="HOL.bool"/></fun></pred></const><var name="s2"><fun><tvar name="b"/><type name="HOL.bool"/></fun></var></app></prems><concls><app><const name="is_finite" local="true"><pred><fun><prodt><tvar name="a"/><tvar name="b"/></prodt><type name="HOL.bool"/></fun></pred></const><app><const name="product" path="set.Set"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="b"/><type name="HOL.bool"/></fun><fun><prodt><tvar name="a"/><tvar name="b"/></prodt><type name="HOL.bool"/></fun></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="b"/><type name="HOL.bool"/></fun></var></app></app></concls></lemma><param name="cardinal" altname="cardinal" path="set.Cardinal"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></param><lemma name="cardinal_nonneg" altname="cardinal_nonneg" path="set.Cardinal"><prems/><concls><app><const name="Orderings.ord_class.less_eq"/><num val="0"><type name="Int.int"/></num><app><const name="cardinal" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></concls></lemma><lemma name="cardinal_empty" altname="cardinal_empty" path="set.Cardinal"><prems><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="is_empty" path="set.Set"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="HOL.eq"/><app><const name="cardinal" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><num val="0"><type name="Int.int"/></num></app></app></concls></lemma><lemma name="cardinal_add" altname="cardinal_add" path="set.Cardinal"><prems><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></prems><concls><app><const name="HOL.implies"/><app><const name="mem" path="set.Set"><pred><tvar name="a"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="x"><tvar name="a"/></var><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="HOL.eq"/><app><const name="cardinal" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><app><const name="Fun.fun_upd"/><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="x"><tvar name="a"/></var><const name="HOL.True"/></app></app><app><const name="cardinal" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.Not"/><app><const name="mem" path="set.Set"><pred><tvar name="a"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="x"><tvar name="a"/></var><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app><app><const name="HOL.eq"/><app><const name="cardinal" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><app><const name="Fun.fun_upd"/><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="x"><tvar name="a"/></var><const name="HOL.True"/></app></app><app><const name="Groups.plus_class.plus"/><app><const name="cardinal" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><num val="1"><type name="Int.int"/></num></app></app></app></concls></lemma><lemma name="cardinal_remove" altname="cardinal_remove" path="set.Cardinal"><prems><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></prems><concls><app><const name="HOL.implies"/><app><const name="mem" path="set.Set"><pred><tvar name="a"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="x"><tvar name="a"/></var><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="HOL.eq"/><app><const name="cardinal" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><app><const name="Fun.fun_upd"/><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="x"><tvar name="a"/></var><const name="HOL.False"/></app></app><app><const name="Groups.minus_class.minus"/><app><const name="cardinal" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><num val="1"><type name="Int.int"/></num></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.Not"/><app><const name="mem" path="set.Set"><pred><tvar name="a"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="x"><tvar name="a"/></var><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app><app><const name="HOL.eq"/><app><const name="cardinal" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><app><const name="Fun.fun_upd"/><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="x"><tvar name="a"/></var><const name="HOL.False"/></app></app><app><const name="cardinal" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></app></concls></lemma><lemma name="cardinal_subset" altname="cardinal_subset" path="set.Cardinal"><prems><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="subset" path="set.Set"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></prems><concls><app><const name="Orderings.ord_class.less_eq"/><app><const name="cardinal" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="cardinal" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></concls></lemma><lemma name="subset_eq" altname="subset_eq" path="set.Cardinal"><prems><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="subset" path="set.Set"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="HOL.eq"/><app><const name="cardinal" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="cardinal" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></prems><concls><app><const name="HOL.eq"/><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></concls></lemma><lemma name="cardinal1" altname="cardinal1" path="set.Cardinal"><prems><app><const name="HOL.eq"/><app><const name="cardinal" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><num val="1"><type name="Int.int"/></num></app><app><const name="mem" path="set.Set"><pred><tvar name="a"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="x"><tvar name="a"/></var><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></prems><concls><app><const name="HOL.eq"/><var name="x"><tvar name="a"/></var><app><const name="pick" path="set.Set"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><tvar name="a"/></fun></const><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></concls></lemma><lemma name="cardinal_union" altname="cardinal_union" path="set.Cardinal"><prems><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="cardinal" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><app><const name="union" path="set.Set"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app><app><const name="Groups.minus_class.minus"/><app><const name="Groups.plus_class.plus"/><app><const name="cardinal" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="cardinal" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app><app><const name="cardinal" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><app><const name="inter" path="set.Set"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></app></app></concls></lemma><lemma name="cardinal_inter_disjoint" altname="cardinal_inter_disjoint" path="set.Cardinal"><prems><app><const name="disjoint" path="set.Set"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="cardinal" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><app><const name="inter" path="set.Set"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app><num val="0"><type name="Int.int"/></num></app></concls></lemma><lemma name="cardinal_diff" altname="cardinal_diff" path="set.Cardinal"><prems><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="cardinal" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><app><const name="diff" path="set.Set"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app><app><const name="Groups.minus_class.minus"/><app><const name="cardinal" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="cardinal" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><app><const name="inter" path="set.Set"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></app></app></concls></lemma><lemma name="cardinal_map" altname="cardinal_map" path="set.Cardinal"><prems><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></prems><concls><app><const name="Orderings.ord_class.less_eq"/><app><const name="cardinal" local="true"><fun><fun><tvar name="b"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><app><const name="map" path="set.Set"><fun><fun><tvar name="a"/><tvar name="b"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="b"/><type name="HOL.bool"/></fun></fun></const><var name="f"><fun><tvar name="a"/><tvar name="b"/></fun></var><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app><app><const name="cardinal" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></concls></lemma><lemma name="cardinal_product" altname="cardinal_product" path="set.Cardinal"><prems><app><const name="is_finite" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="is_finite" local="true"><pred><fun><tvar name="b"/><type name="HOL.bool"/></fun></pred></const><var name="s2"><fun><tvar name="b"/><type name="HOL.bool"/></fun></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="cardinal" local="true"><fun><fun><prodt><tvar name="a"/><tvar name="b"/></prodt><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><app><const name="product" path="set.Set"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="b"/><type name="HOL.bool"/></fun><fun><prodt><tvar name="a"/><tvar name="b"/></prodt><type name="HOL.bool"/></fun></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="b"/><type name="HOL.bool"/></fun></var></app></app><app><const name="Groups.times_class.times"/><app><const name="cardinal" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="cardinal" local="true"><fun><fun><tvar name="b"/><type name="HOL.bool"/></fun><type name="Int.int"/></fun></const><var name="s2"><fun><tvar name="b"/><type name="HOL.bool"/></fun></var></app></app></app></concls></lemma></theory>