<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.6.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.3.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Z3" version="4.12.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="6" name="Alt-Ergo" version="2.4.2" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="counting_sort.mlw"/>
<theory name="Spec" proved="true">
 <goal name="k&#39;vc" expl="VC for k" proved="true">
 <proof prover="3"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="eqlt&#39;vc" expl="VC for eqlt" proved="true">
 <proof prover="6"><result status="valid" time="4.77" steps="24583"/></proof>
 </goal>
</theory>
<theory name="CountingSort" proved="true">
 <goal name="counting_sort&#39;vc" expl="VC for counting_sort" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="counting_sort&#39;vc.0" expl="array creation size" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="6"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="42"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="22"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.3" expl="index in array bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="41"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.4" expl="index in array bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="41"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.5" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.06" steps="364"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="2.41" steps="11677"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="61"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="29"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="31"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.10" expl="index in array bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="32"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="32"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="32"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="57"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="58"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.34" steps="55075"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.16" expl="index in array bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.08" steps="787"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="52"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.14" steps="400403"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.04" steps="830"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="90194"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="10" memlimit="4000"><result status="valid" time="0.14" steps="405585"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.26" steps="1964"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="48"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="73"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="83"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.26" expl="out of loop bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.16" steps="1652"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.27" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="2.99" steps="13979"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.28" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="230"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.29" expl="out of loop bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="18"/></proof>
  </goal>
  <goal name="counting_sort&#39;vc.30" expl="out of loop bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="22"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="InPlaceCountingSort" proved="true">
 <goal name="in_place_counting_sort&#39;vc" expl="VC for in_place_counting_sort" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="in_place_counting_sort&#39;vc.0" expl="array creation size" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="4"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="38"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="20"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.3" expl="index in array bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="38"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.4" expl="index in array bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="38"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.5" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.06" steps="429"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="1.79" steps="7777"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="56"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="27"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="29"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.10" expl="index in array bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="30"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="30"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="30"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="55"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="56"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.15" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.39" steps="54484"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.16" expl="index in array bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.11" steps="1415"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.17" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.30" steps="1602"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="50"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.50" steps="1271834"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.31" steps="2253"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="62453"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.24" steps="535045"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.55" steps="4115"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="46"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="77"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="6"><result status="valid" time="0.01" steps="89"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.27" expl="out of loop bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.15" steps="1983"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.28" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="36506"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.29" expl="postcondition" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="224"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.30" expl="out of loop bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="16"/></proof>
  </goal>
  <goal name="in_place_counting_sort&#39;vc.31" expl="out of loop bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="19"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Harness" proved="true">
 <goal name="harness&#39;vc" expl="VC for harness" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="harness&#39;vc.0" expl="array creation size" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="4"/></proof>
  </goal>
  <goal name="harness&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
  <goal name="harness&#39;vc.2" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.00" steps="106"/></proof>
  </goal>
  <goal name="harness&#39;vc.3" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="42530"/></proof>
  </goal>
  <goal name="harness&#39;vc.4" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="110500"/></proof>
  </goal>
  <goal name="harness&#39;vc.5" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="114823"/></proof>
  </goal>
  <goal name="harness&#39;vc.6" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="207559"/></proof>
  </goal>
  <goal name="harness&#39;vc.7" expl="assertion" proved="true">
  <proof prover="6"><result status="valid" time="0.14" steps="1257"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
