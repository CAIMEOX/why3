<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.6.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="7" name="Alt-Ergo" version="2.3.0" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="hillel_challenge.mlw"/>
<theory name="Leftpad" proved="true">
 <goal name="leftpad&#39;vc" expl="VC for leftpad" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="7010"/></proof>
 </goal>
</theory>
<theory name="Unique" proved="true">
 <goal name="unique&#39;vc" expl="VC for unique" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="unique&#39;vc.0" expl="array creation size" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="10607"/></proof>
  </goal>
  <goal name="unique&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="9502"/></proof>
  </goal>
  <goal name="unique&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="12014"/></proof>
  </goal>
  <goal name="unique&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="10976"/></proof>
  </goal>
  <goal name="unique&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="10644"/></proof>
  </goal>
  <goal name="unique&#39;vc.5" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="10394"/></proof>
  </goal>
  <goal name="unique&#39;vc.6" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="10429"/></proof>
  </goal>
  <goal name="unique&#39;vc.7" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="10621"/></proof>
  </goal>
  <goal name="unique&#39;vc.8" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="11089"/></proof>
  </goal>
  <goal name="unique&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="10718"/></proof>
  </goal>
  <goal name="unique&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="97858"/></proof>
  </goal>
  <goal name="unique&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="7"><result status="valid" time="0.19" steps="1093"/></proof>
  </goal>
  <goal name="unique&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="7"><result status="valid" time="0.04" steps="145"/></proof>
  </goal>
  <goal name="unique&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="10268"/></proof>
  </goal>
  <goal name="unique&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="7"><result status="valid" time="0.02" steps="163"/></proof>
  </goal>
  <goal name="unique&#39;vc.15" expl="loop invariant preservation" proved="true">
  <transf name="case" proved="true" arg1="x=a[i]">
   <goal name="unique&#39;vc.15.0" expl="true case (loop invariant preservation)" proved="true">
   <proof prover="7"><result status="valid" time="0.01" steps="27"/></proof>
   </goal>
   <goal name="unique&#39;vc.15.1" expl="false case (loop invariant preservation)" proved="true">
   <transf name="assert" proved="true" arg1="(mem x a (i+1) &lt;-&gt; mem x a i)">
    <goal name="unique&#39;vc.15.1.0" expl="asserted formula" proved="true">
    <proof prover="0"><result status="valid" time="0.04" steps="11366"/></proof>
    </goal>
    <goal name="unique&#39;vc.15.1.1" expl="false case (loop invariant preservation)" proved="true">
    <proof prover="7"><result status="valid" time="0.02" steps="39"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="unique&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="7"><result status="valid" time="0.01" steps="27"/></proof>
  </goal>
  <goal name="unique&#39;vc.17" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="10847"/></proof>
  </goal>
  <goal name="unique&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="44616"/></proof>
  </goal>
  <goal name="unique&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="12642"/></proof>
  </goal>
  <goal name="unique&#39;vc.20" expl="out of loop bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="11627"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Fulcrum" proved="true">
 <goal name="fulcrum&#39;vc" expl="VC for fulcrum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="fulcrum&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="5132"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="4413"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.2" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="6842"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="5158"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="4400"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="4003"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="5638"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="4440"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.8" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="4622"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.9" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="4622"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="17123"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="8661"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="4719"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="7923"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.57" steps="60651"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="11222"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="8548"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="4726"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="4367"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.62" steps="83751"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="4579"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="5060"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.22" expl="out of loop bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="4517"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.23" expl="out of loop bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="8058"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="FulcrumNoOverflow" proved="true">
 <goal name="big&#39;vc" expl="VC for big" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="4798"/></proof>
 </goal>
 <goal name="big_zero&#39;vc" expl="VC for big_zero" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="4964"/></proof>
 </goal>
 <goal name="add_big&#39;vc" expl="VC for add_big" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add_big&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6038"/></proof>
  </goal>
  <goal name="add_big&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="6242"/></proof>
  </goal>
  <goal name="add_big&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6329"/></proof>
  </goal>
  <goal name="add_big&#39;vc.3" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="6470"/></proof>
  </goal>
  <goal name="add_big&#39;vc.4" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="6728"/></proof>
  </goal>
  <goal name="add_big&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="5256"/></proof>
  </goal>
  <goal name="add_big&#39;vc.6" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add_big&#39;vc.6.0" expl="type invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="6165"/></proof>
   </goal>
   <goal name="add_big&#39;vc.6.1" expl="type invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="6162"/></proof>
   </goal>
   <goal name="add_big&#39;vc.6.2" expl="type invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="5134"/></proof>
   </goal>
   <goal name="add_big&#39;vc.6.3" expl="type invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="6099"/></proof>
   </goal>
   <goal name="add_big&#39;vc.6.4" expl="type invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.04" steps="6589"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add_big&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="5187"/></proof>
  </goal>
  <goal name="add_big&#39;vc.8" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="5971"/></proof>
  </goal>
  <goal name="add_big&#39;vc.9" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6149"/></proof>
  </goal>
  <goal name="add_big&#39;vc.10" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="6262"/></proof>
  </goal>
  <goal name="add_big&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6377"/></proof>
  </goal>
  <goal name="add_big&#39;vc.12" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6784"/></proof>
  </goal>
  <goal name="add_big&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="5256"/></proof>
  </goal>
  <goal name="add_big&#39;vc.14" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6344"/></proof>
  </goal>
  <goal name="add_big&#39;vc.15" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="6982"/></proof>
  </goal>
  <goal name="add_big&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="5241"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sub_big&#39;vc" expl="VC for sub_big" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="8539"/></proof>
 </goal>
 <goal name="delta&#39;vc" expl="VC for delta" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="delta&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6175"/></proof>
  </goal>
  <goal name="delta&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6562"/></proof>
  </goal>
  <goal name="delta&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="6633"/></proof>
  </goal>
  <goal name="delta&#39;vc.3" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6720"/></proof>
  </goal>
  <goal name="delta&#39;vc.4" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6861"/></proof>
  </goal>
  <goal name="delta&#39;vc.5" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="7046"/></proof>
  </goal>
  <goal name="delta&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="8016"/></proof>
  </goal>
  <goal name="delta&#39;vc.7" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6471"/></proof>
  </goal>
  <goal name="delta&#39;vc.8" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="6616"/></proof>
  </goal>
  <goal name="delta&#39;vc.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="7366"/></proof>
  </goal>
  <goal name="delta&#39;vc.10" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6429"/></proof>
  </goal>
  <goal name="delta&#39;vc.11" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="7077"/></proof>
  </goal>
  <goal name="delta&#39;vc.12" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="6553"/></proof>
  </goal>
  <goal name="delta&#39;vc.13" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="6627"/></proof>
  </goal>
  <goal name="delta&#39;vc.14" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6714"/></proof>
  </goal>
  <goal name="delta&#39;vc.15" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6783"/></proof>
  </goal>
  <goal name="delta&#39;vc.16" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6993"/></proof>
  </goal>
  <goal name="delta&#39;vc.17" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="7856"/></proof>
  </goal>
  <goal name="delta&#39;vc.18" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="6548"/></proof>
  </goal>
  <goal name="delta&#39;vc.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="7413"/></proof>
  </goal>
  <goal name="delta&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="6468"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="big_lt&#39;vc" expl="VC for big_lt" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="6808"/></proof>
 </goal>
 <goal name="sum_bounds&#39;vc" expl="VC for sum_bounds" proved="true">
 <proof prover="0"><result status="valid" time="0.04" steps="10819"/></proof>
 </goal>
 <goal name="fulcrum&#39;vc" expl="VC for fulcrum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="fulcrum&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="6788"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="5834"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="7219"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.3" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="6371"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="7737"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.5" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="5934"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.6" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="9736"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="7702"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.8" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="7648"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="5939"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="9321"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="6437"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="5992"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="9660"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6543"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.15" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="6748"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.16" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="9164"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.17" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="6808"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.18" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="12708"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.17" steps="19637"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.20" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="12662"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.21" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.07" steps="9475"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.22" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="9543"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="6410"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.20" steps="21602"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="117572"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="7084"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="27112"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="7" timelimit="5"><result status="valid" time="0.05" steps="277"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="6333"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.18" steps="18981"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="526457"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="6907"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="7" timelimit="5"><result status="valid" time="0.02" steps="43"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.34" expl="loop invariant preservation" proved="true">
  <proof prover="7" timelimit="5"><result status="valid" time="0.02" steps="49"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.35" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="6747"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.36" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="9060"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.37" expl="out of loop bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="6581"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.38" expl="out of loop bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="18055"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
