<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.4.2" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC4" version="1.4" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="Firstorder_term_spec.mlw"/>
<theory name="Spec" proved="true">
 <goal name="size_positive_lemma_fo_term_list&#39;vc" expl="VC for size_positive_lemma_fo_term_list" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="241"/></proof>
 </goal>
 <goal name="size_positive_lemma_fo_term&#39;vc" expl="VC for size_positive_lemma_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="183"/></proof>
 </goal>
 <goal name="renaming_composition_lemma_fo_term_list&#39;vc" expl="VC for renaming_composition_lemma_fo_term_list" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="166"/></proof>
 </goal>
 <goal name="renaming_composition_lemma_fo_term&#39;vc" expl="VC for renaming_composition_lemma_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="286"/></proof>
 </goal>
 <goal name="renaming_identity_lemma_fo_term_list&#39;vc" expl="VC for renaming_identity_lemma_fo_term_list" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="240"/></proof>
 </goal>
 <goal name="renaming_identity_lemma_fo_term&#39;vc" expl="VC for renaming_identity_lemma_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="344"/></proof>
 </goal>
 <goal name="associativity_subst_rename_rename_lemma_fo_term&#39;vc" expl="VC for associativity_subst_rename_rename_lemma_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="72"/></proof>
 </goal>
 <goal name="associativity_rename_subst_rename_lemma_fo_term&#39;vc" expl="VC for associativity_rename_subst_rename_lemma_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="72"/></proof>
 </goal>
 <goal name="right_rename_subst_by_identity_lemma_fo_term&#39;vc" expl="VC for right_rename_subst_by_identity_lemma_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="235"/></proof>
 </goal>
 <goal name="olifts_composition_lemma_rename_subst_fo_term&#39;vc" expl="VC for olifts_composition_lemma_rename_subst_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.10" steps="2108"/></proof>
 </goal>
 <goal name="olifts_composition_lemma_subst_rename_fo_term&#39;vc" expl="VC for olifts_composition_lemma_subst_rename_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="1.71" steps="13137"/></proof>
 </goal>
 <goal name="rename_then_subst_composition_lemma_fo_term_list&#39;vc" expl="VC for rename_then_subst_composition_lemma_fo_term_list" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="236"/></proof>
 </goal>
 <goal name="rename_then_subst_composition_lemma_fo_term&#39;vc" expl="VC for rename_then_subst_composition_lemma_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.07" steps="346"/></proof>
 </goal>
 <goal name="subst_then_rename_composition_lemma_fo_term_list&#39;vc" expl="VC for subst_then_rename_composition_lemma_fo_term_list" proved="true">
 <proof prover="2"><result status="valid" time="0.06" steps="259"/></proof>
 </goal>
 <goal name="subst_then_rename_composition_lemma_fo_term&#39;vc" expl="VC for subst_then_rename_composition_lemma_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.06" steps="448"/></proof>
 </goal>
 <goal name="associativity_rename_subst_subst_lemma_fo_term&#39;vc" expl="VC for associativity_rename_subst_subst_lemma_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="74"/></proof>
 </goal>
 <goal name="associativity_subst_rename_subst_lemma_fo_term&#39;vc" expl="VC for associativity_subst_rename_subst_lemma_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="74"/></proof>
 </goal>
 <goal name="associativity_subst_subst_rename_lemma_fo_term&#39;vc" expl="VC for associativity_subst_subst_rename_lemma_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="74"/></proof>
 </goal>
 <goal name="olifts_composition_lemma_subst_subst_fo_term&#39;vc" expl="VC for olifts_composition_lemma_subst_subst_fo_term" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="olifts_composition_lemma_subst_subst_fo_term&#39;vc.0" expl="assertion" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.06" steps="668"/></proof>
  </goal>
  <goal name="olifts_composition_lemma_subst_subst_fo_term&#39;vc.1" expl="assertion" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.03" steps="543"/></proof>
  </goal>
  <goal name="olifts_composition_lemma_subst_subst_fo_term&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.26" steps="79139"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="subst_composition_lemma_fo_term_list&#39;vc" expl="VC for subst_composition_lemma_fo_term_list" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="subst_composition_lemma_fo_term_list&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="52"/></proof>
  </goal>
  <goal name="subst_composition_lemma_fo_term_list&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="170"/></proof>
  </goal>
  <goal name="subst_composition_lemma_fo_term_list&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="309"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="subst_composition_lemma_fo_term&#39;vc" expl="VC for subst_composition_lemma_fo_term" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="subst_composition_lemma_fo_term&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="169"/></proof>
  </goal>
  <goal name="subst_composition_lemma_fo_term&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="352"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="associativity_subst_subst_subst_lemma_fo_term&#39;vc" expl="VC for associativity_subst_subst_subst_lemma_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="76"/></proof>
 </goal>
 <goal name="olifts_identity_fo_term&#39;vc" expl="VC for olifts_identity_fo_term" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="olifts_identity_fo_term&#39;vc.0" expl="assertion" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="olifts_identity_fo_term&#39;vc.0.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="38"/></proof>
   </goal>
   <goal name="olifts_identity_fo_term&#39;vc.0.1" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="244"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="olifts_identity_fo_term&#39;vc.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="55"/></proof>
  </goal>
  <goal name="olifts_identity_fo_term&#39;vc.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="14"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="left_rename_subst_identity_lemma_fo_term&#39;vc" expl="VC for left_rename_subst_identity_lemma_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="246"/></proof>
 </goal>
 <goal name="subst_identity_lemma_fo_term_list&#39;vc" expl="VC for subst_identity_lemma_fo_term_list" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="294"/></proof>
 </goal>
 <goal name="subst_identity_lemma_fo_term&#39;vc" expl="VC for subst_identity_lemma_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="503"/></proof>
 </goal>
 <goal name="left_subst_subst_identity_lemma_fo_term&#39;vc" expl="VC for left_subst_subst_identity_lemma_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="166"/></proof>
 </goal>
 <goal name="right_subst_subst_by_identity_lemma_fo_term&#39;vc" expl="VC for right_subst_subst_by_identity_lemma_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="127"/></proof>
 </goal>
 <goal name="renaming_preserve_size_fo_term_list&#39;vc" expl="VC for renaming_preserve_size_fo_term_list" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="178"/></proof>
 </goal>
 <goal name="renaming_preserve_size_fo_term&#39;vc" expl="VC for renaming_preserve_size_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="232"/></proof>
 </goal>
 <goal name="rename_free_var_constructive_inversion_symbol_fo_term_list&#39;vc" expl="VC for rename_free_var_constructive_inversion_symbol_fo_term_list" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="rename_free_var_constructive_inversion_symbol_fo_term_list&#39;vc.0" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="40"/></proof>
  </goal>
  <goal name="rename_free_var_constructive_inversion_symbol_fo_term_list&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="74"/></proof>
  </goal>
  <goal name="rename_free_var_constructive_inversion_symbol_fo_term_list&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="12"/></proof>
  </goal>
  <goal name="rename_free_var_constructive_inversion_symbol_fo_term_list&#39;vc.3" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="76"/></proof>
  </goal>
  <goal name="rename_free_var_constructive_inversion_symbol_fo_term_list&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14"/></proof>
  </goal>
  <goal name="rename_free_var_constructive_inversion_symbol_fo_term_list&#39;vc.5" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="53"/></proof>
  </goal>
  <goal name="rename_free_var_constructive_inversion_symbol_fo_term_list&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="24"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="rename_free_var_inversion_symbol_fo_term_list&#39;vc" expl="VC for rename_free_var_inversion_symbol_fo_term_list" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="30"/></proof>
 </goal>
 <goal name="rename_free_var_constructive_inversion_fo_term_fo_term_list&#39;vc" expl="VC for rename_free_var_constructive_inversion_fo_term_fo_term_list" proved="true">
 <proof prover="2"><result status="valid" time="0.06" steps="223"/></proof>
 </goal>
 <goal name="rename_free_var_inversion_fo_term_fo_term_list&#39;vc" expl="VC for rename_free_var_inversion_fo_term_fo_term_list" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="30"/></proof>
 </goal>
 <goal name="rename_free_var_constructive_inversion_symbol_fo_term&#39;vc" expl="VC for rename_free_var_constructive_inversion_symbol_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="1087"/></proof>
 </goal>
 <goal name="rename_free_var_inversion_symbol_fo_term&#39;vc" expl="VC for rename_free_var_inversion_symbol_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="30"/></proof>
 </goal>
 <goal name="rename_free_var_constructive_inversion_fo_term_fo_term&#39;vc" expl="VC for rename_free_var_constructive_inversion_fo_term_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.06" steps="182"/></proof>
 </goal>
 <goal name="rename_free_var_inversion_fo_term_fo_term&#39;vc" expl="VC for rename_free_var_inversion_fo_term_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="30"/></proof>
 </goal>
 <goal name="rename_free_var_propagation_symbol_fo_term_list&#39;vc" expl="VC for rename_free_var_propagation_symbol_fo_term_list" proved="true">
 <proof prover="2"><result status="valid" time="0.06" steps="201"/></proof>
 </goal>
 <goal name="rename_free_var_propagation_fo_term_fo_term_list&#39;vc" expl="VC for rename_free_var_propagation_fo_term_fo_term_list" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="201"/></proof>
 </goal>
 <goal name="rename_free_var_propagation_symbol_fo_term&#39;vc" expl="VC for rename_free_var_propagation_symbol_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.07" steps="322"/></proof>
 </goal>
 <goal name="rename_free_var_propagation_fo_term_fo_term&#39;vc" expl="VC for rename_free_var_propagation_fo_term_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="233"/></proof>
 </goal>
 <goal name="subst_free_var_constructive_inversion_symbol_fo_term_list&#39;vc" expl="VC for subst_free_var_constructive_inversion_symbol_fo_term_list" proved="true">
 <proof prover="2"><result status="valid" time="1.49" steps="17537"/></proof>
 </goal>
 <goal name="subst_free_var_inversion_symbol_fo_term_list&#39;vc" expl="VC for subst_free_var_inversion_symbol_fo_term_list" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="71"/></proof>
 </goal>
 <goal name="subst_free_var_constructive_inversion_fo_term_fo_term_list&#39;vc" expl="VC for subst_free_var_constructive_inversion_fo_term_fo_term_list" proved="true">
 <proof prover="2"><result status="valid" time="0.10" steps="2457"/></proof>
 </goal>
 <goal name="subst_free_var_inversion_fo_term_fo_term_list&#39;vc" expl="VC for subst_free_var_inversion_fo_term_fo_term_list" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="27"/></proof>
 </goal>
 <goal name="subst_free_var_constructive_inversion_symbol_fo_term&#39;vc" expl="VC for subst_free_var_constructive_inversion_symbol_fo_term" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="subst_free_var_constructive_inversion_symbol_fo_term&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="12"/></proof>
  </goal>
  <goal name="subst_free_var_constructive_inversion_symbol_fo_term&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="353"/></proof>
  </goal>
  <goal name="subst_free_var_constructive_inversion_symbol_fo_term&#39;vc.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="23"/></proof>
  </goal>
  <goal name="subst_free_var_constructive_inversion_symbol_fo_term&#39;vc.3" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="115"/></proof>
  </goal>
  <goal name="subst_free_var_constructive_inversion_symbol_fo_term&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14"/></proof>
  </goal>
  <goal name="subst_free_var_constructive_inversion_symbol_fo_term&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="1808"/></proof>
  </goal>
  <goal name="subst_free_var_constructive_inversion_symbol_fo_term&#39;vc.6" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="24"/></proof>
  </goal>
  <goal name="subst_free_var_constructive_inversion_symbol_fo_term&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="271"/></proof>
  </goal>
  <goal name="subst_free_var_constructive_inversion_symbol_fo_term&#39;vc.8" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="24"/></proof>
  </goal>
  <goal name="subst_free_var_constructive_inversion_symbol_fo_term&#39;vc.9" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="85"/></proof>
  </goal>
  <goal name="subst_free_var_constructive_inversion_symbol_fo_term&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.32" steps="3539"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="subst_free_var_inversion_symbol_fo_term&#39;vc" expl="VC for subst_free_var_inversion_symbol_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="71"/></proof>
 </goal>
 <goal name="subst_free_var_constructive_inversion_fo_term_fo_term&#39;vc" expl="VC for subst_free_var_constructive_inversion_fo_term_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.08" steps="2022"/></proof>
 </goal>
 <goal name="subst_free_var_inversion_fo_term_fo_term&#39;vc" expl="VC for subst_free_var_inversion_fo_term_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="27"/></proof>
 </goal>
 <goal name="subst_free_var_propagation_symbol_symbol_fo_term_list&#39;vc" expl="VC for subst_free_var_propagation_symbol_symbol_fo_term_list" proved="true">
 <proof prover="2"><result status="valid" time="0.23" steps="1306"/></proof>
 </goal>
 <goal name="subst_free_var_propagation_fo_term_symbol_fo_term_list&#39;vc" expl="VC for subst_free_var_propagation_fo_term_symbol_fo_term_list" proved="true">
 <proof prover="2"><result status="valid" time="0.15" steps="829"/></proof>
 </goal>
 <goal name="subst_free_var_propagation_fo_term_fo_term_fo_term_list&#39;vc" expl="VC for subst_free_var_propagation_fo_term_fo_term_fo_term_list" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="subst_free_var_propagation_fo_term_fo_term_fo_term_list&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="54"/></proof>
  </goal>
  <goal name="subst_free_var_propagation_fo_term_fo_term_fo_term_list&#39;vc.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="27"/></proof>
  </goal>
  <goal name="subst_free_var_propagation_fo_term_fo_term_fo_term_list&#39;vc.2" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="82"/></proof>
  </goal>
  <goal name="subst_free_var_propagation_fo_term_fo_term_fo_term_list&#39;vc.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="10"/></proof>
  </goal>
  <goal name="subst_free_var_propagation_fo_term_fo_term_fo_term_list&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="240"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="subst_free_var_propagation_symbol_symbol_fo_term&#39;vc" expl="VC for subst_free_var_propagation_symbol_symbol_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.20" steps="1103"/></proof>
 </goal>
 <goal name="subst_free_var_propagation_fo_term_symbol_fo_term&#39;vc" expl="VC for subst_free_var_propagation_fo_term_symbol_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.09" steps="676"/></proof>
 </goal>
 <goal name="subst_free_var_propagation_fo_term_fo_term_fo_term&#39;vc" expl="VC for subst_free_var_propagation_fo_term_fo_term_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.13" steps="576"/></proof>
 </goal>
 <goal name="free_var_equivalence_of_subst_fo_term_list&#39;vc" expl="VC for free_var_equivalence_of_subst_fo_term_list" proved="true">
 <proof prover="2"><result status="valid" time="0.10" steps="1854"/></proof>
 </goal>
 <goal name="free_var_equivalence_of_subst_fo_term&#39;vc" expl="VC for free_var_equivalence_of_subst_fo_term" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="free_var_equivalence_of_subst_fo_term&#39;vc.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="16"/></proof>
  </goal>
  <goal name="free_var_equivalence_of_subst_fo_term&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="60"/></proof>
  </goal>
  <goal name="free_var_equivalence_of_subst_fo_term&#39;vc.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="19"/></proof>
  </goal>
  <goal name="free_var_equivalence_of_subst_fo_term&#39;vc.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="19"/></proof>
  </goal>
  <goal name="free_var_equivalence_of_subst_fo_term&#39;vc.4" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="96"/></proof>
  </goal>
  <goal name="free_var_equivalence_of_subst_fo_term&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="83"/></proof>
  </goal>
  <goal name="free_var_equivalence_of_subst_fo_term&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="88"/></proof>
  </goal>
  <goal name="free_var_equivalence_of_subst_fo_term&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="106"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="free_var_equivalence_of_rename_fo_term_list&#39;vc" expl="VC for free_var_equivalence_of_rename_fo_term_list" proved="true">
 <proof prover="2"><result status="valid" time="0.06" steps="116"/></proof>
 </goal>
 <goal name="free_var_equivalence_of_rename_fo_term&#39;vc" expl="VC for free_var_equivalence_of_rename_fo_term" proved="true">
 <proof prover="2"><result status="valid" time="0.06" steps="116"/></proof>
 </goal>
 <goal name="free_var_derive_equivalence_of_subst_fo_term_list&#39;vc" expl="VC for free_var_derive_equivalence_of_subst_fo_term_list" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="free_var_derive_equivalence_of_subst_fo_term_list&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="70"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term_list&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="85"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term_list&#39;vc.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="284"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term_list&#39;vc.3" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="277"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term_list&#39;vc.4" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="70"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term_list&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="87"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term_list&#39;vc.6" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="287"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term_list&#39;vc.7" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="282"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term_list&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="62"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term_list&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="61"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="free_var_derive_equivalence_of_subst_fo_term&#39;vc" expl="VC for free_var_derive_equivalence_of_subst_fo_term" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="free_var_derive_equivalence_of_subst_fo_term&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="100"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term&#39;vc.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="403"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term&#39;vc.2" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="78"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="92"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term&#39;vc.4" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="324"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term&#39;vc.5" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="313"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="74"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_subst_fo_term&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="70"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="free_var_derive_equivalence_of_rename_fo_term_list&#39;vc" expl="VC for free_var_derive_equivalence_of_rename_fo_term_list" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="free_var_derive_equivalence_of_rename_fo_term_list&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="19"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_rename_fo_term_list&#39;vc.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="44"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_rename_fo_term_list&#39;vc.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="63"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_rename_fo_term_list&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.38"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_rename_fo_term_list&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.37"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="free_var_derive_equivalence_of_rename_fo_term&#39;vc" expl="VC for free_var_derive_equivalence_of_rename_fo_term" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="free_var_derive_equivalence_of_rename_fo_term&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="19"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_rename_fo_term&#39;vc.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="44"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_rename_fo_term&#39;vc.2" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="63"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_rename_fo_term&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.41"/></proof>
  </goal>
  <goal name="free_var_derive_equivalence_of_rename_fo_term&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.40"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
