<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="Z3" version="4.6.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.0.0" timelimit="36" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Alt-Ergo" version="2.3.0" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="insertion_sort.mlw"/>
<theory name="InsertionSort" proved="true">
 <goal name="insertion_sort&#39;vc" expl="VC for insertion_sort" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="insertion_sort&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="135"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.00" steps="10"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.6" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.7" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.00" steps="21"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.8" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.9" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="43"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.10" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.00" steps="17"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.00" steps="30"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.88" steps="811"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="191"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="109"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.15" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.16" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="120"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="9772"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.00" steps="6"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.20" expl="out of loop bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="test1&#39;vc" expl="VC for test1" proved="true">
 <proof prover="2"><result status="valid" time="0.00" steps="11"/></proof>
 </goal>
 <goal name="test2&#39;vc" expl="VC for test2" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="38"/></proof>
 </goal>
 <goal name="bench&#39;vc" expl="VC for bench" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="36"/></proof>
 </goal>
</theory>
<theory name="InsertionSortGen" proved="true">
 <goal name="insertion_sort&#39;vc" expl="VC for insertion_sort" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="insertion_sort&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="10222"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="31122"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="31211"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="31609"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.04" steps="135"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.40" steps="1659988"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="33248"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.7" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="34375"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.8" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="34837"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.9" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="34830"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.10" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="48927"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.11" expl="loop variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="43945"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="44605"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.62" steps="816"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="65855"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="91628"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.16" expl="assertion" proved="true">
  <proof prover="2" timelimit="1"><result status="valid" time="0.01" steps="45"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.17" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="35195"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.03" steps="52910"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="44074"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="10081"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="30886"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.22" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="31614"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="InsertionSortSwaps" proved="true">
 <goal name="insertion_sort&#39;vc" expl="VC for insertion_sort" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="insertion_sort&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="8732"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="9599"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="8919"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="8643"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="9869"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.5" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="9262"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.6" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="9276"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="9534"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.8" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="9100"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="9617"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="11798"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.10" steps="449"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="12676"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="9215"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="9768"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="8739"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.16" expl="out of loop bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="10088"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
