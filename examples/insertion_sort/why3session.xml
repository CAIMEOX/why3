<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Alt-Ergo" version="2.4.2" timelimit="36" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.6.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Alt-Ergo" version="2.3.0" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="insertion_sort.mlw"/>
<theory name="InsertionSort" proved="true">
 <goal name="insertion_sort&#39;vc" expl="VC for insertion_sort" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="insertion_sort&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="16"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="18"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="648"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="88"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="27"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.6" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="36"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.7" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="38"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.8" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="21"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.9" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="186"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.10" expl="loop variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="20"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="23"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="204"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.13" steps="847"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="203"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.15" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="65"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.16" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.13" steps="1973"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="10204"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.19" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="6"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.20" expl="out of loop bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="18"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="test1&#39;vc" expl="VC for test1" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="16"/></proof>
 </goal>
 <goal name="test2&#39;vc" expl="VC for test2" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="420"/></proof>
 </goal>
 <goal name="bench&#39;vc" expl="VC for bench" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="11"/></proof>
 </goal>
</theory>
<theory name="InsertionSortGen" proved="true">
 <goal name="insertion_sort&#39;vc" expl="VC for insertion_sort" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="insertion_sort&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="10681"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="31736"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="31876"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="32226"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.04" steps="499"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.40" steps="830212"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="33571"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.7" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="34808"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.8" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="35266"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.9" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="35299"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.10" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="49733"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.11" expl="loop variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="44232"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="45039"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.03" steps="167"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="64425"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="74957"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.16" expl="assertion" proved="true">
  <proof prover="0" timelimit="1"><result status="valid" time="0.01" steps="67"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.17" expl="index in array bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="35668"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="5"><result status="valid" time="0.03" steps="53298"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="44363"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="10513"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="31503"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.22" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="32224"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="InsertionSortSwaps" proved="true">
 <goal name="insertion_sort&#39;vc" expl="VC for insertion_sort" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="insertion_sort&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="8993"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="10027"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="9405"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="9056"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="10359"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.5" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="9743"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.6" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="9757"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="10022"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.8" expl="loop variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="9513"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="10103"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="12800"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.10" steps="449"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="13705"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="9628"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="10031"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="8929"/></proof>
  </goal>
  <goal name="insertion_sort&#39;vc.16" expl="out of loop bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="10514"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
