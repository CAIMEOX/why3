<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.6" timelimit="120" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.3.0" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="byte_string_base64_encoding.mlw"/>
<theory name="Base64">
 <goal name="int2b64&#39;vc" expl="VC for int2b64" proved="true">
 <proof prover="2"><result status="valid" time="0.09" steps="307"/></proof>
 </goal>
 <goal name="eq_symbol&#39;vc" expl="VC for eq_symbol" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="6"/></proof>
 </goal>
 <goal name="int2b64_valid_4_char" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="92"/></proof>
 </goal>
 <goal name="b642int&#39;vc" expl="VC for b642int" proved="true">
 <proof prover="2"><result status="valid" time="0.53" steps="2983"/></proof>
 </goal>
 <goal name="b642int_int2b64" proved="true">
 <proof prover="2"><result status="valid" time="0.08" steps="233"/></proof>
 </goal>
 <goal name="get_pad&#39;vc" expl="VC for get_pad" proved="true">
 <proof prover="2"><result status="valid" time="0.14" steps="749"/></proof>
 </goal>
 <goal name="calc_pad_mod3" proved="true">
 <proof prover="2"><result status="valid" time="0.16" steps="81"/></proof>
 </goal>
 <goal name="calc_pad&#39;vc" expl="VC for calc_pad" proved="true">
 <proof prover="2"><result status="valid" time="1.80" steps="1461"/></proof>
 </goal>
 <goal name="encoding_valid_b64&#39;vc" expl="VC for encoding_valid_b64" proved="true">
 <proof prover="2"><result status="valid" time="0.86" steps="2054"/></proof>
 </goal>
 <goal name="decode_unique&#39;vc" expl="VC for decode_unique" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="decode_unique&#39;vc.0" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decode_unique&#39;vc.0.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.86" steps="575"/></proof>
   </goal>
   <goal name="decode_unique&#39;vc.0.1" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.89" steps="601"/></proof>
   </goal>
   <goal name="decode_unique&#39;vc.0.2" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.87" steps="623"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decode_unique&#39;vc.1" expl="assertion" proved="true">
  <transf name="instantiate" proved="true" arg1="Assert" arg2="(div i 3)">
   <goal name="decode_unique&#39;vc.1.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.08" steps="220"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decode_unique&#39;vc.2" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(s11 ==&#39; s31)">
   <goal name="decode_unique&#39;vc.2.0" expl="asserted formula" proved="true">
   <proof prover="2"><result status="valid" time="0.32" steps="326"/></proof>
   </goal>
   <goal name="decode_unique&#39;vc.2.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="14"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="encode_unique&#39;vc" expl="VC for encode_unique" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="encode_unique&#39;vc.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="12"/></proof>
  </goal>
  <goal name="encode_unique&#39;vc.1" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="encode_unique&#39;vc.1.0" expl="assertion" proved="true">
   <transf name="unfold" proved="true" arg1="encoding" arg2="in" arg3="H3">
    <goal name="encode_unique&#39;vc.1.0.0" expl="assertion" proved="true">
    <transf name="split_premise_full" proved="true" >
     <goal name="encode_unique&#39;vc.1.0.0.0" expl="assertion" proved="true">
     <transf name="instantiate" proved="true" arg1="H12" arg2="i">
      <goal name="encode_unique&#39;vc.1.0.0.0.0" expl="assertion" proved="true">
      <proof prover="2"><result status="valid" time="3.90" steps="9515"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="encode_unique&#39;vc.1.1" expl="assertion" proved="true">
   <transf name="unfold" proved="true" arg1="encoding" arg2="in" arg3="H5">
    <goal name="encode_unique&#39;vc.1.1.0" expl="assertion" proved="true">
    <transf name="split_premise_full" proved="true" >
     <goal name="encode_unique&#39;vc.1.1.0.0" expl="assertion" proved="true">
     <transf name="instantiate" proved="true" arg1="H14" arg2="i">
      <goal name="encode_unique&#39;vc.1.1.0.0.0" expl="assertion" proved="true">
      <transf name="instantiate" proved="true" arg1="H13" arg2="i">
       <goal name="encode_unique&#39;vc.1.1.0.0.0.0" expl="assertion" proved="true">
       <proof prover="2" timelimit="30"><result status="valid" time="19.21" steps="22332"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="encode_unique&#39;vc.1.2" expl="assertion" proved="true">
   <transf name="unfold" proved="true" arg1="encoding" arg2="in" arg3="H7">
    <goal name="encode_unique&#39;vc.1.2.0" expl="assertion" proved="true">
    <transf name="split_premise_full" proved="true" >
     <goal name="encode_unique&#39;vc.1.2.0.0" expl="assertion" proved="true">
     <transf name="instantiate" proved="true" arg1="H14" arg2="i">
      <goal name="encode_unique&#39;vc.1.2.0.0.0" expl="assertion" proved="true">
      <transf name="instantiate" proved="true" arg1="H15" arg2="i">
       <goal name="encode_unique&#39;vc.1.2.0.0.0.0" expl="assertion" proved="true">
       <proof prover="2" timelimit="60"><result status="valid" time="51.69" steps="47093"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="encode_unique&#39;vc.1.3" expl="assertion" proved="true">
   <transf name="unfold" proved="true" arg1="encoding" arg2="in" arg3="H8">
    <goal name="encode_unique&#39;vc.1.3.0" expl="assertion" proved="true">
    <transf name="split_premise_full" proved="true" >
     <goal name="encode_unique&#39;vc.1.3.0.0" expl="assertion" proved="true">
     <transf name="instantiate" proved="true" arg1="H15" arg2="i">
      <goal name="encode_unique&#39;vc.1.3.0.0.0" expl="assertion" proved="true">
      <proof prover="2" timelimit="10"><result status="valid" time="6.91" steps="7917"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="encode_unique&#39;vc.1.4" expl="assertion" proved="true">
   <transf name="unfold" proved="true" arg1="encoding" arg2="in" arg3="H7">
    <goal name="encode_unique&#39;vc.1.4.0" expl="assertion" proved="true">
    <transf name="split_premise_full" proved="true" >
     <goal name="encode_unique&#39;vc.1.4.0.0" expl="assertion" proved="true">
     <transf name="instantiate" proved="true" arg1="H14" arg2="i">
      <goal name="encode_unique&#39;vc.1.4.0.0.0" expl="assertion" proved="true">
      <transf name="instantiate" proved="true" arg1="H15" arg2="i">
       <goal name="encode_unique&#39;vc.1.4.0.0.0.0" expl="assertion" proved="true">
       <proof prover="2" timelimit="10"><result status="valid" time="4.59" steps="5095"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="encode_unique&#39;vc.1.5" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.74" steps="743"/></proof>
   </goal>
   <goal name="encode_unique&#39;vc.1.6" expl="assertion" proved="true">
   <transf name="unfold" proved="true" arg1="encoding" arg2="in" arg3="H5">
    <goal name="encode_unique&#39;vc.1.6.0" expl="assertion" proved="true">
    <transf name="split_premise_full" proved="true" >
     <goal name="encode_unique&#39;vc.1.6.0.0" expl="assertion" proved="true">
     <transf name="instantiate" proved="true" arg1="H14" arg2="i">
      <goal name="encode_unique&#39;vc.1.6.0.0.0" expl="assertion" proved="true">
      <transf name="instantiate" proved="true" arg1="H13" arg2="i">
       <goal name="encode_unique&#39;vc.1.6.0.0.0.0" expl="assertion" proved="true">
       <proof prover="2" timelimit="30"><result status="valid" time="2.28" steps="4171"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="encode_unique&#39;vc.1.7" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.27" steps="540"/></proof>
   </goal>
   <goal name="encode_unique&#39;vc.1.8" expl="assertion" proved="true">
   <transf name="unfold" proved="true" arg1="encoding" arg2="in" arg3="H7">
    <goal name="encode_unique&#39;vc.1.8.0" expl="assertion" proved="true">
    <transf name="split_premise_full" proved="true" >
     <goal name="encode_unique&#39;vc.1.8.0.0" expl="assertion" proved="true">
     <transf name="instantiate" proved="true" arg1="H14" arg2="i">
      <goal name="encode_unique&#39;vc.1.8.0.0.0" expl="assertion" proved="true">
      <proof prover="2" timelimit="30"><result status="valid" time="0.12" steps="259"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="encode_unique&#39;vc.2" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="encode_unique&#39;vc.2.0" expl="assertion" proved="true">
   <transf name="unfold" proved="true" arg1="encoding" arg2="in" arg3="H2">
    <goal name="encode_unique&#39;vc.2.0.0" expl="assertion" proved="true">
    <transf name="split_premise_full" proved="true" >
     <goal name="encode_unique&#39;vc.2.0.0.0" expl="assertion" proved="true">
     <transf name="instantiate" proved="true" arg1="H11" arg2="i">
      <goal name="encode_unique&#39;vc.2.0.0.0.0" expl="assertion" proved="true">
      <proof prover="2"><result status="valid" time="3.43" steps="5088"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="encode_unique&#39;vc.2.1" expl="assertion" proved="true">
   <transf name="unfold" proved="true" arg1="encoding" arg2="in" arg3="H4">
    <goal name="encode_unique&#39;vc.2.1.0" expl="assertion" proved="true">
    <transf name="split_premise_full" proved="true" >
     <goal name="encode_unique&#39;vc.2.1.0.0" expl="assertion" proved="true">
     <transf name="instantiate" proved="true" arg1="H12" arg2="i">
      <goal name="encode_unique&#39;vc.2.1.0.0.0" expl="assertion" proved="true">
      <transf name="instantiate" proved="true" arg1="H13" arg2="i">
       <goal name="encode_unique&#39;vc.2.1.0.0.0.0" expl="assertion" proved="true">
       <proof prover="2" timelimit="20"><result status="valid" time="14.81" steps="22870"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="encode_unique&#39;vc.2.2" expl="assertion" proved="true">
   <transf name="unfold" proved="true" arg1="encoding" arg2="in" arg3="H6">
    <goal name="encode_unique&#39;vc.2.2.0" expl="assertion" proved="true">
    <transf name="split_premise_full" proved="true" >
     <goal name="encode_unique&#39;vc.2.2.0.0" expl="assertion" proved="true">
     <transf name="instantiate" proved="true" arg1="H13" arg2="i">
      <goal name="encode_unique&#39;vc.2.2.0.0.0" expl="assertion" proved="true">
      <transf name="instantiate" proved="true" arg1="H14" arg2="i">
       <goal name="encode_unique&#39;vc.2.2.0.0.0.0" expl="assertion" proved="true">
       <proof prover="2" timelimit="120"><result status="valid" time="72.88" steps="77919"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="encode_unique&#39;vc.2.3" expl="assertion" proved="true">
   <transf name="unfold" proved="true" arg1="encoding" arg2="in" arg3="H7">
    <goal name="encode_unique&#39;vc.2.3.0" expl="assertion" proved="true">
    <transf name="split_premise_full" proved="true" >
     <goal name="encode_unique&#39;vc.2.3.0.0" expl="assertion" proved="true">
     <transf name="instantiate" proved="true" arg1="H14" arg2="i">
      <goal name="encode_unique&#39;vc.2.3.0.0.0" expl="assertion" proved="true">
      <proof prover="2" timelimit="50"><result status="valid" time="15.85" steps="15273"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="encode_unique&#39;vc.2.4" expl="assertion" proved="true">
   <transf name="unfold" proved="true" arg1="encoding" arg2="in" arg3="H6">
    <goal name="encode_unique&#39;vc.2.4.0" expl="assertion" proved="true">
    <transf name="split_premise_full" proved="true" >
     <goal name="encode_unique&#39;vc.2.4.0.0" expl="assertion" proved="true">
     <transf name="instantiate" proved="true" arg1="H13" arg2="i">
      <goal name="encode_unique&#39;vc.2.4.0.0.0" expl="assertion" proved="true">
      <transf name="instantiate" proved="true" arg1="H14" arg2="i">
       <goal name="encode_unique&#39;vc.2.4.0.0.0.0" expl="assertion" proved="true">
       <proof prover="2" timelimit="15"><result status="valid" time="7.02" steps="5855"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="encode_unique&#39;vc.2.5" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.87" steps="1059"/></proof>
   </goal>
   <goal name="encode_unique&#39;vc.2.6" expl="assertion" proved="true">
   <transf name="unfold" proved="true" arg1="encoding" arg2="in" arg3="H4">
    <goal name="encode_unique&#39;vc.2.6.0" expl="assertion" proved="true">
    <transf name="split_premise_full" proved="true" >
     <goal name="encode_unique&#39;vc.2.6.0.0" expl="assertion" proved="true">
     <transf name="instantiate" proved="true" arg1="H12" arg2="i">
      <goal name="encode_unique&#39;vc.2.6.0.0.0" expl="assertion" proved="true">
      <transf name="instantiate" proved="true" arg1="H13" arg2="i">
       <goal name="encode_unique&#39;vc.2.6.0.0.0.0" expl="assertion" proved="true">
       <proof prover="2"><result status="valid" time="2.61" steps="5568"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="encode_unique&#39;vc.2.7" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.31" steps="378"/></proof>
   </goal>
   <goal name="encode_unique&#39;vc.2.8" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.32" steps="386"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode_unique&#39;vc.3" expl="assertion" proved="true">
  <transf name="instantiate" proved="true" arg1="Assert1" arg2="i">
   <goal name="encode_unique&#39;vc.3.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.12" steps="290"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode_unique&#39;vc.4" expl="assertion" proved="true">
  <transf name="instantiate" proved="true" arg1="Assert" arg2="(div i 4)">
   <goal name="encode_unique&#39;vc.4.0" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.06" steps="117"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode_unique&#39;vc.5" expl="assertion" proved="true">
  <transf name="assert" proved="true" arg1="(s21 ==&#39; s31)">
   <goal name="encode_unique&#39;vc.5.0" expl="asserted formula" proved="true">
   <proof prover="2"><result status="valid" time="0.23" steps="283"/></proof>
   </goal>
   <goal name="encode_unique&#39;vc.5.1" expl="assertion" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="16"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode_unique&#39;vc.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="encode_unique&#39;vc.6.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="16"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="encode&#39;vc" expl="VC for encode">
 <transf name="split_vc" >
  <goal name="encode&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="encode&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="33"/></proof>
  </goal>
  <goal name="encode&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="12"/></proof>
  </goal>
  <goal name="encode&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="15"/></proof>
  </goal>
  <goal name="encode&#39;vc.4" expl="loop invariant init" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="encode&#39;vc.4.0" expl="loop invariant init" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="15"/></proof>
   </goal>
   <goal name="encode&#39;vc.4.1" expl="loop invariant init" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="17"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="20"/></proof>
  </goal>
  <goal name="encode&#39;vc.6" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="26"/></proof>
  </goal>
  <goal name="encode&#39;vc.7" expl="precondition" proved="true">
  <transf name="instantiate" proved="true" arg1="LoopInvariant" arg2="(div (length r - 2) 4)">
   <goal name="encode&#39;vc.7.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.51" steps="340"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.8" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.15" steps="21196"/></proof>
  </goal>
  <goal name="encode&#39;vc.9" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="encode&#39;vc.9.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="28"/></proof>
   </goal>
   <goal name="encode&#39;vc.9.1" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="118"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.10" expl="precondition" proved="true">
  <transf name="instantiate" proved="true" arg1="LoopInvariant" arg2="(div (length r - 3) 4)">
   <goal name="encode&#39;vc.10.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.01" steps="28"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.11" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="30"/></proof>
  </goal>
  <goal name="encode&#39;vc.12" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="195"/></proof>
  </goal>
  <goal name="encode&#39;vc.13" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="34"/></proof>
  </goal>
  <goal name="encode&#39;vc.14" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="303"/></proof>
  </goal>
  <goal name="encode&#39;vc.15" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="38"/></proof>
  </goal>
  <goal name="encode&#39;vc.16" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="255"/></proof>
  </goal>
  <goal name="encode&#39;vc.17" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="260"/></proof>
  </goal>
  <goal name="encode&#39;vc.18" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.28" steps="308"/></proof>
  </goal>
  <goal name="encode&#39;vc.19" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="46"/></proof>
  </goal>
  <goal name="encode&#39;vc.20" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.93" steps="777"/></proof>
  </goal>
  <goal name="encode&#39;vc.21" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="50"/></proof>
  </goal>
  <goal name="encode&#39;vc.22" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="1.45" steps="860"/></proof>
  </goal>
  <goal name="encode&#39;vc.23" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.54" steps="404"/></proof>
  </goal>
  <goal name="encode&#39;vc.24" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.80" steps="494"/></proof>
  </goal>
  <goal name="encode&#39;vc.25" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="58"/></proof>
  </goal>
  <goal name="encode&#39;vc.26" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="2.99" steps="1236"/></proof>
  </goal>
  <goal name="encode&#39;vc.27" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.19" steps="36413"/></proof>
  </goal>
  <goal name="encode&#39;vc.28" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.43" steps="62581"/></proof>
  </goal>
  <goal name="encode&#39;vc.29" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="encode&#39;vc.29.0" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.55" steps="61503"/></proof>
   </goal>
   <goal name="encode&#39;vc.29.1" expl="precondition" proved="true">
   <proof prover="1"><result status="valid" time="0.21" steps="34754"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.30" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="6.07" steps="2207"/></proof>
  </goal>
  <goal name="encode&#39;vc.31" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.20" steps="70"/></proof>
  </goal>
  <goal name="encode&#39;vc.32" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="encode&#39;vc.32.0" expl="assertion" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.64" steps="542621"/></proof>
   </goal>
   <goal name="encode&#39;vc.32.1" expl="assertion" proved="true">
   <transf name="assert" proved="true" arg1="((str r)[length (str r) - 3] = (str r2)[length (str r2) - 1])">
    <goal name="encode&#39;vc.32.1.0" expl="asserted formula" proved="true">
    <proof prover="0" timelimit="5"><result status="valid" time="0.10" steps="224053"/></proof>
    </goal>
    <goal name="encode&#39;vc.32.1.1" expl="assertion" proved="true">
    <proof prover="2" timelimit="60"><result status="valid" time="5.05" steps="1653"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="encode&#39;vc.32.2" expl="assertion" proved="true">
   <transf name="assert" proved="true" arg1="((str r)[length (str r) - 2] = (str r1)[length (str r1) - 1])">
    <goal name="encode&#39;vc.32.2.0" expl="asserted formula" proved="true">
    <proof prover="0" timelimit="5"><result status="valid" time="0.10" steps="228227"/></proof>
    </goal>
    <goal name="encode&#39;vc.32.2.1" expl="assertion" proved="true">
    <proof prover="2" timelimit="30"><result status="valid" time="8.49" steps="2528"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="encode&#39;vc.32.3" expl="assertion" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.10" steps="225058"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.33" expl="assertion" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.64" steps="647077"/></proof>
  </goal>
  <goal name="encode&#39;vc.34" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="80"/></proof>
  </goal>
  <goal name="encode&#39;vc.35" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="80"/></proof>
  </goal>
  <goal name="encode&#39;vc.36" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="2.39" steps="861"/></proof>
  </goal>
  <goal name="encode&#39;vc.37" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="2.35" steps="1128"/></proof>
  </goal>
  <goal name="encode&#39;vc.38" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="encode&#39;vc.38.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="3.79" steps="1244"/></proof>
   </goal>
   <goal name="encode&#39;vc.38.1" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="2.30" steps="748"/></proof>
   </goal>
   <goal name="encode&#39;vc.38.2" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="10"><result status="valid" time="6.41" steps="2151"/></proof>
   </goal>
   <goal name="encode&#39;vc.38.3" expl="loop invariant preservation" proved="true">
   <proof prover="2" timelimit="10"><result status="valid" time="4.79" steps="1339"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.39" expl="assertion" proved="true">
  <transf name="instantiate" proved="true" arg1="LoopInvariant" arg2="(div (length r - 2) 4)">
   <goal name="encode&#39;vc.39.0" expl="assertion" proved="true">
   <proof prover="2" timelimit="30"><result status="valid" time="19.57" steps="9237"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.40" expl="assertion" proved="true">
  <transf name="instantiate" proved="true" arg1="LoopInvariant" arg2="(div (length r - 3) 4)">
   <goal name="encode&#39;vc.40.0" expl="assertion" proved="true">
   <proof prover="2" timelimit="30"><result status="valid" time="27.42" steps="7097"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.41" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="159"/></proof>
  </goal>
  <goal name="encode&#39;vc.42" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.15" steps="384"/></proof>
  </goal>
  <goal name="encode&#39;vc.43" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="143"/></proof>
  </goal>
  <goal name="encode&#39;vc.44" expl="postcondition">
  <proof prover="0"><result status="timeout" time="120.00" steps="36283337"/></proof>
  <proof prover="1" timelimit="120"><result status="timeout" time="120.00" steps="4979847"/></proof>
  <proof prover="2" timelimit="120"><result status="timeout" time="120.00"/></proof>
  <transf name="unfold" arg1="encoding">
   <goal name="encode&#39;vc.44.0" expl="VC for encode">
   <transf name="split_vc" >
    <goal name="encode&#39;vc.44.0.0" expl="VC for encode" proved="true">
    <proof prover="2"><result status="valid" time="0.47" steps="959"/></proof>
    </goal>
    <goal name="encode&#39;vc.44.0.1" expl="VC for encode" proved="true">
    <transf name="instantiate" proved="true" arg1="LoopInvariant" arg2="i">
     <goal name="encode&#39;vc.44.0.1.0" expl="VC for encode" proved="true">
     <transf name="split_premise_full" proved="true" >
      <goal name="encode&#39;vc.44.0.1.0.0" expl="VC for encode" proved="true">
      <transf name="assert" proved="true" arg1="(b = div (length (str r)) 4 = div (length sp) 3)">
       <goal name="encode&#39;vc.44.0.1.0.0.0" expl="asserted formula" proved="true">
       <proof prover="2"><result status="valid" time="1.09" steps="1140"/></proof>
       </goal>
       <goal name="encode&#39;vc.44.0.1.0.0.1" expl="VC for encode" proved="true">
       <proof prover="1" timelimit="10"><result status="valid" time="6.64" steps="300930"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="encode&#39;vc.44.0.2" expl="VC for encode">
    <proof prover="0"><result status="failure" time="0.00"/></proof>
    <proof prover="1"><result status="timeout" time="5.00" steps="328835"/></proof>
    <proof prover="2" timelimit="120"><result status="timeout" time="120.00"/></proof>
    <transf name="instantiate" arg1="LoopInvariant" arg2="i">
     <goal name="encode&#39;vc.44.0.2.0" expl="VC for encode">
     <transf name="split_premise_full" >
      <goal name="encode&#39;vc.44.0.2.0.0" expl="VC for encode">
      <transf name="assert" arg1="(b = div (length (str r)) 4 = div (length sp) 3)">
       <goal name="encode&#39;vc.44.0.2.0.0.0" expl="asserted formula" proved="true">
       <proof prover="2"><result status="valid" time="1.11" steps="1296"/></proof>
       </goal>
       <goal name="encode&#39;vc.44.0.2.0.0.1" expl="VC for encode">
       <proof prover="0"><result status="timeout" time="120.00" steps="30037876"/></proof>
       <proof prover="1" timelimit="120"><result status="timeout" time="120.00" steps="3280266"/></proof>
       <proof prover="2" timelimit="120"><result status="timeout" time="120.00"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="encode&#39;vc.44.0.3" expl="VC for encode">
    <proof prover="0" timelimit="5"><result status="timeout" time="5.00" steps="5113230"/></proof>
    <proof prover="1"><result status="timeout" time="5.00" steps="263618"/></proof>
    <proof prover="2"><result status="timeout" time="5.00"/></proof>
    </goal>
    <goal name="encode&#39;vc.44.0.4" expl="VC for encode">
    <proof prover="0"><result status="failure" time="0.00"/></proof>
    <proof prover="1"><result status="timeout" time="5.00" steps="307287"/></proof>
    <proof prover="2" timelimit="120"><result status="timeout" time="120.00"/></proof>
    <transf name="instantiate" arg1="LoopInvariant" arg2="i">
     <goal name="encode&#39;vc.44.0.4.0" expl="VC for encode">
     <transf name="split_premise_full" >
      <goal name="encode&#39;vc.44.0.4.0.0" expl="VC for encode">
      <transf name="assert" arg1="(b = div (length (str r)) 4 = div (length sp) 3)">
       <goal name="encode&#39;vc.44.0.4.0.0.0" expl="asserted formula" proved="true">
       <proof prover="2"><result status="valid" time="1.55" steps="1521"/></proof>
       </goal>
       <goal name="encode&#39;vc.44.0.4.0.0.1" expl="VC for encode">
       <proof prover="1" timelimit="60"><result status="timeout" time="60.00" steps="2041239"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="encode&#39;vc.44.0.5" expl="VC for encode">
    <proof prover="0"><result status="failure" time="0.00"/></proof>
    <proof prover="1"><result status="timeout" time="5.00" steps="299181"/></proof>
    <proof prover="2" timelimit="120"><result status="timeout" time="120.00"/></proof>
    </goal>
    <goal name="encode&#39;vc.44.0.6" expl="VC for encode" proved="true">
    <proof prover="2"><result status="valid" time="0.03" steps="40"/></proof>
    </goal>
    <goal name="encode&#39;vc.44.0.7" expl="VC for encode">
    <proof prover="0"><result status="failure" time="0.00"/></proof>
    <proof prover="1"><result status="timeout" time="5.00" steps="288696"/></proof>
    <proof prover="2" timelimit="120"><result status="timeout" time="120.00"/></proof>
    </goal>
    <goal name="encode&#39;vc.44.0.8" expl="VC for encode" proved="true">
    <proof prover="2"><result status="valid" time="0.08" steps="255"/></proof>
    </goal>
    <goal name="encode&#39;vc.44.0.9" expl="VC for encode" proved="true">
    <proof prover="2"><result status="valid" time="0.03" steps="42"/></proof>
    </goal>
    <goal name="encode&#39;vc.44.0.10" expl="VC for encode">
    <proof prover="0"><result status="failure" time="0.00"/></proof>
    <proof prover="1"><result status="timeout" time="5.00" steps="287886"/></proof>
    <proof prover="2" timelimit="120"><result status="timeout" time="120.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="decode&#39;vc" expl="VC for decode" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="decode&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="12"/></proof>
  </goal>
  <goal name="decode&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13"/></proof>
  </goal>
  <goal name="decode&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="16"/></proof>
  </goal>
  <goal name="decode&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2" timelimit="60"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="decode&#39;vc.4" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="decode&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="79"/></proof>
  </goal>
  <goal name="decode&#39;vc.6" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="26"/></proof>
  </goal>
  <goal name="decode&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="91"/></proof>
  </goal>
  <goal name="decode&#39;vc.8" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="decode&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="105"/></proof>
  </goal>
  <goal name="decode&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="decode&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="164"/></proof>
  </goal>
  <goal name="decode&#39;vc.12" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="30"/></proof>
  </goal>
  <goal name="decode&#39;vc.13" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="166"/></proof>
  </goal>
  <goal name="decode&#39;vc.14" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decode&#39;vc.14.0" expl="precondition" proved="true">
   <proof prover="2" timelimit="15"><result status="valid" time="0.13" steps="272"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decode&#39;vc.15" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="203"/></proof>
  </goal>
  <goal name="decode&#39;vc.16" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.16" steps="309"/></proof>
  </goal>
  <goal name="decode&#39;vc.17" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decode&#39;vc.17.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.15" steps="348"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decode&#39;vc.18" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="40"/></proof>
  </goal>
  <goal name="decode&#39;vc.19" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="289"/></proof>
  </goal>
  <goal name="decode&#39;vc.20" expl="precondition" proved="true">
  <proof prover="2" timelimit="60"><result status="valid" time="0.21" steps="461"/></proof>
  </goal>
  <goal name="decode&#39;vc.21" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="44"/></proof>
  </goal>
  <goal name="decode&#39;vc.22" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.22" steps="367"/></proof>
  </goal>
  <goal name="decode&#39;vc.23" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.34" steps="440"/></proof>
  </goal>
  <goal name="decode&#39;vc.24" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.46" steps="448"/></proof>
  </goal>
  <goal name="decode&#39;vc.25" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.39" steps="604"/></proof>
  </goal>
  <goal name="decode&#39;vc.26" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.37" steps="623"/></proof>
  </goal>
  <goal name="decode&#39;vc.27" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="54"/></proof>
  </goal>
  <goal name="decode&#39;vc.28" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.32" steps="406"/></proof>
  </goal>
  <goal name="decode&#39;vc.29" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.65" steps="581"/></proof>
  </goal>
  <goal name="decode&#39;vc.30" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="3.39" steps="1248"/></proof>
  </goal>
  <goal name="decode&#39;vc.31" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="4.87" steps="4571"/></proof>
  </goal>
  <goal name="decode&#39;vc.32" expl="precondition" proved="true">
  <proof prover="2" timelimit="30"><result status="valid" time="5.78" steps="4650"/></proof>
  </goal>
  <goal name="decode&#39;vc.33" expl="precondition" proved="true">
  <proof prover="2" timelimit="30"><result status="valid" time="4.65" steps="3309"/></proof>
  </goal>
  <goal name="decode&#39;vc.34" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.64" steps="468"/></proof>
  </goal>
  <goal name="decode&#39;vc.35" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decode&#39;vc.35.0" expl="assertion" proved="true">
   <proof prover="2" timelimit="60"><result status="valid" time="49.14" steps="18904"/></proof>
   </goal>
   <goal name="decode&#39;vc.35.1" expl="assertion" proved="true">
   <proof prover="2" timelimit="30"><result status="valid" time="27.71" steps="11176"/></proof>
   </goal>
   <goal name="decode&#39;vc.35.2" expl="assertion" proved="true">
   <proof prover="2" timelimit="30"><result status="valid" time="5.81" steps="4527"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decode&#39;vc.36" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="5.72" steps="3147"/></proof>
  </goal>
  <goal name="decode&#39;vc.37" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="76"/></proof>
  </goal>
  <goal name="decode&#39;vc.38" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.89" steps="474"/></proof>
  </goal>
  <goal name="decode&#39;vc.39" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="79"/></proof>
  </goal>
  <goal name="decode&#39;vc.40" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.59" steps="490"/></proof>
  </goal>
  <goal name="decode&#39;vc.41" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="decode&#39;vc.41.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.79" steps="941"/></proof>
   </goal>
   <goal name="decode&#39;vc.41.1" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="1.61" steps="1128"/></proof>
   </goal>
   <goal name="decode&#39;vc.41.2" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.68" steps="883"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="decode&#39;vc.42" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="97"/></proof>
  </goal>
  <goal name="decode&#39;vc.43" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="119"/></proof>
  </goal>
  <goal name="decode&#39;vc.44" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.87" steps="1162"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="decode_encode&#39;vc" expl="VC for decode_encode" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="54"/></proof>
 </goal>
</theory>
</file>
</why3session>
