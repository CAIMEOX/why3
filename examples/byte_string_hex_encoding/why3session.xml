<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.7" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.3.0" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="byte_string_hex_encoding.mlw"/>
<theory name="Top" proved="true">
 <goal name="hex&#39;vc" expl="VC for hex" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="83"/></proof>
 </goal>
 <goal name="xeh&#39;vc" expl="VC for xeh" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="191"/></proof>
 </goal>
 <goal name="decode_unique" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="decode_unique.0" proved="true">
  <transf name="assert" proved="true" arg1="(s1 == s3)">
   <goal name="decode_unique.0.0" expl="asserted formula" proved="true">
   <proof prover="2"><result status="valid" time="0.01" steps="152"/></proof>
   </goal>
   <goal name="decode_unique.0.1" proved="true">
   <proof prover="2"><result status="valid" time="0.09" steps="14"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="encode&#39;vc" expl="VC for encode" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="encode&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="12"/></proof>
  </goal>
  <goal name="encode&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="encode&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="17"/></proof>
  </goal>
  <goal name="encode&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="17"/></proof>
  </goal>
  <goal name="encode&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="20"/></proof>
  </goal>
  <goal name="encode&#39;vc.5" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="22"/></proof>
  </goal>
  <goal name="encode&#39;vc.6" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="104"/></proof>
  </goal>
  <goal name="encode&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2" timelimit="60"><result status="valid" time="0.18" steps="301"/></proof>
  </goal>
  <goal name="encode&#39;vc.8" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="26"/></proof>
  </goal>
  <goal name="encode&#39;vc.9" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="139"/></proof>
  </goal>
  <goal name="encode&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="235"/></proof>
  </goal>
  <goal name="encode&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="32"/></proof>
  </goal>
  <goal name="encode&#39;vc.12" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="32"/></proof>
  </goal>
  <goal name="encode&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="32"/></proof>
  </goal>
  <goal name="encode&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="189"/></proof>
  </goal>
  <goal name="encode&#39;vc.15" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="encode&#39;vc.15.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="2.50" steps="193084"/></proof>
   </goal>
   <goal name="encode&#39;vc.15.1" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="3.12" steps="225671"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.16" expl="loop invariant preservation" proved="true">
  <transf name="instantiate" proved="true" arg1="LoopInvariant" arg2="(div j 2)">
   <goal name="encode&#39;vc.16.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="3.84" steps="5113"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="encode&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="2" timelimit="60"><result status="valid" time="3.20" steps="4552"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="decode&#39;vc" expl="VC for decode" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="decode&#39;vc.0" expl="division by zero" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="10"/></proof>
  </goal>
  <goal name="decode&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="55"/></proof>
  </goal>
  <goal name="decode&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="16"/></proof>
  </goal>
  <goal name="decode&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
  <goal name="decode&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="21"/></proof>
  </goal>
  <goal name="decode&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="27"/></proof>
  </goal>
  <goal name="decode&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="decode&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="122"/></proof>
  </goal>
  <goal name="decode&#39;vc.8" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="30"/></proof>
  </goal>
  <goal name="decode&#39;vc.9" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="32"/></proof>
  </goal>
  <goal name="decode&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.18" steps="150"/></proof>
  </goal>
  <goal name="decode&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="168"/></proof>
  </goal>
  <goal name="decode&#39;vc.12" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="219"/></proof>
  </goal>
  <goal name="decode&#39;vc.13" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="412"/></proof>
  </goal>
  <goal name="decode&#39;vc.14" expl="integer overflow" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="40"/></proof>
  </goal>
  <goal name="decode&#39;vc.15" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="40"/></proof>
  </goal>
  <goal name="decode&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="42"/></proof>
  </goal>
  <goal name="decode&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="44"/></proof>
  </goal>
  <goal name="decode&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.26" steps="237"/></proof>
  </goal>
  <goal name="decode&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.68" steps="1104"/></proof>
  </goal>
  <goal name="decode&#39;vc.20" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.12" steps="182"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="decode_encode&#39;vc" expl="VC for decode_encode" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="46"/></proof>
 </goal>
</theory>
</file>
</why3session>
