<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="8">
<prover id="0" name="Alt-Ergo" version="2.0.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.3.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<file proved="true">
<path name=".."/><path name="sumrange.mlw"/>
<theory name="Simple" proved="true">
 <goal name="VC query" expl="VC for query" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC query.0" expl="loop invariant init" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="10975"/></proof>
  </goal>
  <goal name="VC query.1" expl="index in array bounds" proved="true">
  <proof prover="3"><result status="valid" time="0.01" steps="13680"/></proof>
  </goal>
  <goal name="VC query.2" expl="loop invariant preservation" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="13375"/></proof>
  </goal>
  <goal name="VC query.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.00" steps="9504"/></proof>
  </goal>
  <goal name="VC query.4" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="9467"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ExtraLemmas" proved="true">
 <goal name="slice_ext" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="slice_ext.0" proved="true">
  <transf name="assert" proved="true" arg1="(s1[i..j] == s2[i..j])">
   <goal name="slice_ext.0.0" expl="asserted formula" proved="true">
   <proof prover="4"><result status="valid" time="0.07" steps="13448"/></proof>
   </goal>
   <goal name="slice_ext.0.1" proved="true">
   <proof prover="4"><result status="valid" time="0.05" steps="10758"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="sum_set_slice" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="sum_set_slice.0" proved="true">
  <transf name="assert" proved="true" arg1="(sum s[i..j] = sum s[i..k] + s[k] + sum s[k+1..j])">
   <goal name="sum_set_slice.0.0" expl="asserted formula" proved="true">
   <proof prover="4"><result status="valid" time="0.22" steps="56815"/></proof>
   </goal>
   <goal name="sum_set_slice.0.1" proved="true">
   <transf name="assert" proved="true" arg1="(sum s[k&lt;-v][i..j] = sum s[k&lt;-v][i..k] + v + sum s[k&lt;-v][k+1..j])">
    <goal name="sum_set_slice.0.1.0" expl="asserted formula" proved="true">
    <proof prover="4"><result status="valid" time="0.49" steps="107919"/></proof>
    </goal>
    <goal name="sum_set_slice.0.1.1" proved="true">
    <proof prover="4"><result status="valid" time="0.13" steps="31234"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="CumulativeArray" proved="true">
 <goal name="VC create" expl="VC for create" proved="true">
 <proof prover="1"><result status="valid" time="0.90" steps="1386"/></proof>
 </goal>
 <goal name="VC query" expl="VC for query" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC query.0" expl="index in array bounds" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="15144"/></proof>
  </goal>
  <goal name="VC query.1" expl="index in array bounds" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="15163"/></proof>
  </goal>
  <goal name="VC query.2" expl="postcondition" proved="true">
  <transf name="assert" proved="true" arg1="(sum (elts a)[0..j] = sum (elts a)[0..i] + sum (elts a)[i..j])">
   <goal name="VC query.2.0" expl="asserted formula" proved="true">
   <proof prover="1"><result status="valid" time="0.01" steps="10"/></proof>
   </goal>
   <goal name="VC query.2.1" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.07" steps="20764"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC update" expl="VC for update" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC update.0" expl="index in array bounds" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="15130"/></proof>
  </goal>
  <goal name="VC update.1" expl="index in array bounds" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="15160"/></proof>
  </goal>
  <goal name="VC update.2" expl="index in array bounds" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="15145"/></proof>
  </goal>
  <goal name="VC update.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.41" steps="500"/></proof>
  </goal>
  <goal name="VC update.4" expl="loop invariant init" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="0.10" steps="25985"/></proof>
  </goal>
  <goal name="VC update.5" expl="index in array bounds" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="16990"/></proof>
  </goal>
  <goal name="VC update.6" expl="index in array bounds" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="16990"/></proof>
  </goal>
  <goal name="VC update.7" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.11" steps="30548"/></proof>
  </goal>
  <goal name="VC update.8" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.16" steps="38410"/></proof>
  </goal>
  <goal name="VC update.9" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="17870"/></proof>
  </goal>
  <goal name="VC update.10" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="15232"/></proof>
  </goal>
  <goal name="VC update.11" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="15133"/></proof>
  </goal>
  <goal name="VC update.12" expl="out of loop bounds" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="14424"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="CumulativeTree" proved="true">
 <goal name="VC tree_of_array" expl="VC for tree_of_array" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC tree_of_array.0" expl="index in array bounds" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="18106"/></proof>
  </goal>
  <goal name="VC tree_of_array.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="11953"/></proof>
  </goal>
  <goal name="VC tree_of_array.2" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="14956"/></proof>
  </goal>
  <goal name="VC tree_of_array.3" expl="variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="12749"/></proof>
  </goal>
  <goal name="VC tree_of_array.4" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03" steps="12854"/></proof>
  </goal>
  <goal name="VC tree_of_array.5" expl="variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.03" steps="12946"/></proof>
  </goal>
  <goal name="VC tree_of_array.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="13044"/></proof>
  </goal>
  <goal name="VC tree_of_array.7" expl="assertion" proved="true">
  <transf name="destruct_term" proved="true" arg1="l">
   <goal name="VC tree_of_array.7.0" expl="assertion" proved="true">
   <transf name="destruct_term" proved="true" arg1="r">
    <goal name="VC tree_of_array.7.0.0" expl="assertion" proved="true">
    <proof prover="4"><result status="valid" time="0.11" steps="36746"/></proof>
    </goal>
    <goal name="VC tree_of_array.7.0.1" expl="assertion" proved="true">
    <proof prover="4"><result status="valid" time="0.11" steps="20424"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC tree_of_array.7.1" expl="assertion" proved="true">
   <transf name="destruct_term" proved="true" arg1="r">
    <goal name="VC tree_of_array.7.1.0" expl="assertion" proved="true">
    <proof prover="4"><result status="valid" time="0.17" steps="35805"/></proof>
    </goal>
    <goal name="VC tree_of_array.7.1.1" expl="assertion" proved="true">
    <proof prover="4"><result status="valid" time="0.11" steps="34677"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC tree_of_array.8" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="16009"/></proof>
  </goal>
  <goal name="VC tree_of_array.9" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="99"/></proof>
  </goal>
  <goal name="VC tree_of_array.10" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="13284"/></proof>
  </goal>
  <goal name="VC tree_of_array.11" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="13543"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC create" expl="VC for create" proved="true">
 <proof prover="3"><result status="valid" time="0.02" steps="12361"/></proof>
 </goal>
 <goal name="VC query_aux" expl="VC for query_aux" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC query_aux.0" expl="variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="14912"/></proof>
  </goal>
  <goal name="VC query_aux.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="14576"/></proof>
  </goal>
  <goal name="VC query_aux.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="14804"/></proof>
  </goal>
  <goal name="VC query_aux.3" expl="variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="14982"/></proof>
  </goal>
  <goal name="VC query_aux.4" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="15052"/></proof>
  </goal>
  <goal name="VC query_aux.5" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="14982"/></proof>
  </goal>
  <goal name="VC query_aux.6" expl="variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="14991"/></proof>
  </goal>
  <goal name="VC query_aux.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="15070"/></proof>
  </goal>
  <goal name="VC query_aux.8" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="15012"/></proof>
  </goal>
  <goal name="VC query_aux.9" expl="variant decrease" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="14991"/></proof>
  </goal>
  <goal name="VC query_aux.10" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="15005"/></proof>
  </goal>
  <goal name="VC query_aux.11" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.05" steps="14899"/></proof>
  </goal>
  <goal name="VC query_aux.12" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC query_aux.12.0" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.18" steps="40726"/></proof>
   </goal>
   <goal name="VC query_aux.12.1" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.07" steps="19298"/></proof>
   </goal>
   <goal name="VC query_aux.12.2" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="13313"/></proof>
   </goal>
   <goal name="VC query_aux.12.3" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.04" steps="13328"/></proof>
   </goal>
   <goal name="VC query_aux.12.4" expl="postcondition" proved="true">
   <proof prover="4"><result status="valid" time="0.08" steps="24309"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC query" expl="VC for query" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="VC query.0" expl="VC for query" proved="true">
  <transf name="destruct_term" proved="true" arg1="t">
   <goal name="VC query.0.0" expl="VC for query" proved="true">
   <proof prover="3"><result status="valid" time="0.04" steps="19329"/></proof>
   </goal>
   <goal name="VC query.0.1" expl="VC for query" proved="true">
   <proof prover="3"><result status="valid" time="0.03" steps="18006"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="is_tree_for_frame" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="is_tree_for_frame.0" proved="true">
  <proof prover="1" timelimit="10"><result status="valid" time="4.68" steps="3905"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC update_aux" expl="VC for update_aux" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC update_aux.0" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="14413"/></proof>
  </goal>
  <goal name="VC update_aux.1" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="15072"/></proof>
  </goal>
  <goal name="VC update_aux.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="14625"/></proof>
  </goal>
  <goal name="VC update_aux.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="14723"/></proof>
  </goal>
  <goal name="VC update_aux.4" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="17575"/></proof>
  </goal>
  <goal name="VC update_aux.5" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="18468"/></proof>
  </goal>
  <goal name="VC update_aux.6" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="15083"/></proof>
  </goal>
  <goal name="VC update_aux.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="14647"/></proof>
  </goal>
  <goal name="VC update_aux.8" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="14822"/></proof>
  </goal>
  <goal name="VC update_aux.9" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="18484"/></proof>
  </goal>
  <goal name="VC update_aux.10" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="17657"/></proof>
  </goal>
  <goal name="VC update_aux.11" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC update_aux.11.0" expl="VC for update_aux" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC update_aux.11.0.0" expl="VC for update_aux" proved="true">
    <proof prover="4"><result status="valid" time="0.10" steps="25089"/></proof>
    </goal>
    <goal name="VC update_aux.11.0.1" expl="VC for update_aux" proved="true">
    <proof prover="4"><result status="valid" time="0.04" steps="14939"/></proof>
    </goal>
    <goal name="VC update_aux.11.0.2" expl="VC for update_aux" proved="true">
    <proof prover="4"><result status="valid" time="0.05" steps="14964"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC update_aux.11.1" expl="VC for update_aux" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC update_aux.11.1.0" expl="VC for update_aux" proved="true">
    <proof prover="4"><result status="valid" time="0.06" steps="13120"/></proof>
    </goal>
    <goal name="VC update_aux.11.1.1" expl="VC for update_aux" proved="true">
    <proof prover="4"><result status="valid" time="0.06" steps="13387"/></proof>
    </goal>
    <goal name="VC update_aux.11.1.2" expl="VC for update_aux" proved="true">
    <proof prover="4"><result status="valid" time="0.06" steps="13383"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC update_aux.11.2" expl="VC for update_aux" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC update_aux.11.2.0" expl="VC for update_aux" proved="true">
    <proof prover="4"><result status="valid" time="0.06" steps="13107"/></proof>
    </goal>
    <goal name="VC update_aux.11.2.1" expl="VC for update_aux" proved="true">
    <proof prover="4"><result status="valid" time="0.06" steps="13387"/></proof>
    </goal>
    <goal name="VC update_aux.11.2.2" expl="VC for update_aux" proved="true">
    <proof prover="4"><result status="valid" time="0.06" steps="13383"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="VC update_aux.11.3" expl="VC for update_aux" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC update_aux.11.3.0" expl="VC for update_aux" proved="true">
    <proof prover="4"><result status="valid" time="0.13" steps="24573"/></proof>
    </goal>
    <goal name="VC update_aux.11.3.1" expl="VC for update_aux" proved="true">
    <proof prover="4" timelimit="5"><result status="valid" time="0.96" steps="105124"/></proof>
    </goal>
    <goal name="VC update_aux.11.3.2" expl="VC for update_aux" proved="true">
    <proof prover="4"><result status="valid" time="0.51" steps="83660"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC update" expl="VC for update" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="VC update.0" expl="VC for update" proved="true">
  <transf name="destruct_term" proved="true" arg1="t">
   <goal name="VC update.0.0" expl="VC for update" proved="true">
   <proof prover="3"><result status="valid" time="0.03" steps="27380"/></proof>
   </goal>
   <goal name="VC update.0.1" expl="VC for update" proved="true">
   <proof prover="3"><result status="valid" time="0.04" steps="25018"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="depth_min" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="depth_min.0" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="14594"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC depth_is_log" expl="VC for depth_is_log" proved="true">
 <proof prover="0"><result status="valid" time="0.77" steps="1043"/></proof>
 </goal>
 <goal name="VC update_aux_complexity" expl="VC for update_aux_complexity" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC update_aux_complexity.0" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="15696"/></proof>
  </goal>
  <goal name="VC update_aux_complexity.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="14673"/></proof>
  </goal>
  <goal name="VC update_aux_complexity.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.33" steps="52801"/></proof>
  </goal>
  <goal name="VC update_aux_complexity.3" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="16421"/></proof>
  </goal>
  <goal name="VC update_aux_complexity.4" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="15915"/></proof>
  </goal>
  <goal name="VC update_aux_complexity.5" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="16020"/></proof>
  </goal>
  <goal name="VC update_aux_complexity.6" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="18933"/></proof>
  </goal>
  <goal name="VC update_aux_complexity.7" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="19950"/></proof>
  </goal>
  <goal name="VC update_aux_complexity.8" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="20646"/></proof>
  </goal>
  <goal name="VC update_aux_complexity.9" expl="postcondition" proved="true">
  <proof prover="4" timelimit="5"><result status="valid" time="1.39" steps="109473"/></proof>
  </goal>
  <goal name="VC update_aux_complexity.10" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="16432"/></proof>
  </goal>
  <goal name="VC update_aux_complexity.11" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="15937"/></proof>
  </goal>
  <goal name="VC update_aux_complexity.12" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="16119"/></proof>
  </goal>
  <goal name="VC update_aux_complexity.13" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="19966"/></proof>
  </goal>
  <goal name="VC update_aux_complexity.14" expl="assertion" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="19015"/></proof>
  </goal>
  <goal name="VC update_aux_complexity.15" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="20708"/></proof>
  </goal>
  <goal name="VC update_aux_complexity.16" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="1.18" steps="113360"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC query_aux_complexity" expl="VC for query_aux_complexity" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC query_aux_complexity.0" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="15063"/></proof>
  </goal>
  <goal name="VC query_aux_complexity.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="20885"/></proof>
  </goal>
  <goal name="VC query_aux_complexity.2" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="15270"/></proof>
  </goal>
  <goal name="VC query_aux_complexity.3" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="21596"/></proof>
  </goal>
  <goal name="VC query_aux_complexity.4" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="16776"/></proof>
  </goal>
  <goal name="VC query_aux_complexity.5" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="16264"/></proof>
  </goal>
  <goal name="VC query_aux_complexity.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="16468"/></proof>
  </goal>
  <goal name="VC query_aux_complexity.7" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="19195"/></proof>
  </goal>
  <goal name="VC query_aux_complexity.8" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="14821"/></proof>
  </goal>
  <goal name="VC query_aux_complexity.9" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="16847"/></proof>
  </goal>
  <goal name="VC query_aux_complexity.10" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="16344"/></proof>
  </goal>
  <goal name="VC query_aux_complexity.11" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="16619"/></proof>
  </goal>
  <goal name="VC query_aux_complexity.12" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="19320"/></proof>
  </goal>
  <goal name="VC query_aux_complexity.13" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.02" steps="14847"/></proof>
  </goal>
  <goal name="VC query_aux_complexity.14" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.05" steps="16845"/></proof>
  </goal>
  <goal name="VC query_aux_complexity.15" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="16342"/></proof>
  </goal>
  <goal name="VC query_aux_complexity.16" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="16651"/></proof>
  </goal>
  <goal name="VC query_aux_complexity.17" expl="variant decrease" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="17925"/></proof>
  </goal>
  <goal name="VC query_aux_complexity.18" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="17389"/></proof>
  </goal>
  <goal name="VC query_aux_complexity.19" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.04" steps="17636"/></proof>
  </goal>
  <goal name="VC query_aux_complexity.20" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.03" steps="19864"/></proof>
  </goal>
  <goal name="VC query_aux_complexity.21" expl="postcondition" proved="true">
  <proof prover="3"><result status="valid" time="0.06" steps="27309"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
