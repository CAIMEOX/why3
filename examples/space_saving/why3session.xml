<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.10" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Eprover" version="2.0" timelimit="15" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC5" version="1.0.4" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="space_saving.mlw"/>
<theory name="Top" proved="true">
 <goal name="space_saving_2&#39;vc" expl="VC for space_saving_2" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="space_saving_2&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="1297"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="23353"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="2912"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="1578"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="1580"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="1592"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="23245"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.7" expl="thm" proved="true">
  <proof prover="0"><result status="valid" time="0.12" steps="24027"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.8" expl="thm" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="30902"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="1843"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="25007"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="28881"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="32480"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="29432"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="13322"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="29870"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="43092"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="25139"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="28234"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="30937"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="13314"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="29590"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="7343"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="42566"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="24288"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="30870"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.06" steps="31278"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="27738"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="13530"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="7478"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.10" steps="48907"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="24336"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.32" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="28838"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="32340"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.34" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="13466"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.35" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="27809"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.36" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="7489"/></proof>
  </goal>
  <goal name="space_saving_2&#39;vc.37" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="42326"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="minimum&#39;vc" expl="VC for minimum" proved="true">
 <proof prover="0"><result status="valid" time="0.03" steps="35951"/></proof>
 </goal>
 <goal name="increment&#39;vc" expl="VC for increment" proved="true">
 <proof prover="2" timelimit="1"><result status="valid" time="0.59" steps="100852"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="increment&#39;vc.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="58581"/></proof>
  </goal>
  <goal name="increment&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="3269"/></proof>
  </goal>
  <goal name="increment&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="3269"/></proof>
  </goal>
  <goal name="increment&#39;vc.3" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="113458"/></proof>
  </goal>
  <goal name="increment&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="85335"/></proof>
  </goal>
  <goal name="increment&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="123007"/></proof>
  </goal>
  <goal name="increment&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.24" steps="702488"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="find&#39;vc" expl="VC for find" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="32544"/></proof>
 </goal>
 <goal name="minimum_k&#39;vc" expl="VC for minimum_k" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="68149"/></proof>
 </goal>
 <goal name="space_saving_k&#39;vc" expl="VC for space_saving_k" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="space_saving_k&#39;vc.0" expl="array creation size" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="30571"/></proof>
  </goal>
  <goal name="space_saving_k&#39;vc.1" expl="array creation size" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="36222"/></proof>
  </goal>
  <goal name="space_saving_k&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="76205"/></proof>
  </goal>
  <goal name="space_saving_k&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="52235"/></proof>
  </goal>
  <goal name="space_saving_k&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="50840"/></proof>
  </goal>
  <goal name="space_saving_k&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="52513"/></proof>
  </goal>
  <goal name="space_saving_k&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="54852"/></proof>
  </goal>
  <goal name="space_saving_k&#39;vc.7" expl="thm" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="54540"/></proof>
  </goal>
  <goal name="space_saving_k&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="52490"/></proof>
  </goal>
  <goal name="space_saving_k&#39;vc.9" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="5743"/></proof>
  </goal>
  <goal name="space_saving_k&#39;vc.10" expl="thm" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="space_saving_k&#39;vc.10.0" expl="thm" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="55829"/></proof>
   </goal>
   <goal name="space_saving_k&#39;vc.10.1" expl="VC for space_saving_k" proved="true">
   <transf name="case" proved="true" arg1="(occurs v e)">
    <goal name="space_saving_k&#39;vc.10.1.0" expl="true case" proved="true">
    <proof prover="0"><result status="valid" time="0.02" steps="3906"/></proof>
    </goal>
    <goal name="space_saving_k&#39;vc.10.1.1" expl="false case" proved="true">
    <transf name="assert" proved="true" arg1="(occ v s 0 n &lt;= c[minimum c])">
     <goal name="space_saving_k&#39;vc.10.1.1.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="0.03" steps="54381"/></proof>
     </goal>
     <goal name="space_saving_k&#39;vc.10.1.1.1" expl="false case" proved="true">
     <transf name="assert" proved="true" arg1="(k * occ v s 0 n &lt;= n)">
      <goal name="space_saving_k&#39;vc.10.1.1.1.0" expl="asserted formula" proved="true">
      <proof prover="4"><result status="valid" time="1.63"/></proof>
      </goal>
      <goal name="space_saving_k&#39;vc.10.1.1.1.1" expl="false case" proved="true">
      <proof prover="0"><result status="valid" time="0.01" steps="3922"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="space_saving_k&#39;vc.11" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="3894"/></proof>
  </goal>
  <goal name="space_saving_k&#39;vc.12" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="18916"/></proof>
  </goal>
  <goal name="space_saving_k&#39;vc.13" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="59324"/></proof>
  </goal>
  <goal name="space_saving_k&#39;vc.14" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="15465"/></proof>
  </goal>
  <goal name="space_saving_k&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="59192"/></proof>
  </goal>
  <goal name="space_saving_k&#39;vc.16" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="space_saving_k&#39;vc.16.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="62157"/></proof>
   </goal>
   <goal name="space_saving_k&#39;vc.16.1" expl="loop invariant preservation" proved="true">
   <proof prover="5"><result status="valid" time="0.74" steps="157692"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="space_saving_k&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.06" steps="15936"/></proof>
  </goal>
  <goal name="space_saving_k&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="1"><result status="valid" time="0.05" steps="458"/></proof>
  </goal>
  <goal name="space_saving_k&#39;vc.19" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="space_saving_k&#39;vc.19.0" expl="loop invariant preservation" proved="true">
   <proof prover="2"><result status="valid" time="0.17" steps="32118"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="space_saving_k&#39;vc.20" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="55299"/></proof>
  </goal>
  <goal name="space_saving_k&#39;vc.21" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="56386"/></proof>
  </goal>
  <goal name="space_saving_k&#39;vc.22" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="56677"/></proof>
  </goal>
  <goal name="space_saving_k&#39;vc.23" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="15450"/></proof>
  </goal>
  <goal name="space_saving_k&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="56847"/></proof>
  </goal>
  <goal name="space_saving_k&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="1.17" steps="303907"/></proof>
  </goal>
  <goal name="space_saving_k&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.09" steps="26706"/></proof>
  </goal>
  <goal name="space_saving_k&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.92" steps="5476"/></proof>
  </goal>
  <goal name="space_saving_k&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="1.61" steps="294230"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
