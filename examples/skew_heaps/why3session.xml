<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="CVC4" version="1.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<file name="../skew_heaps.mlw" proved="true">
<theory name="SkewHeaps" proved="true">
 <goal name="VC root_is_min" expl="VC for root_is_min" proved="true">
 <proof prover="2"><result status="valid" time="0.25" steps="2124"/></proof>
 </goal>
 <goal name="VC empty" expl="VC for empty" proved="true">
 <proof prover="2"><result status="valid" time="0.00" steps="18"/></proof>
 </goal>
 <goal name="VC get_min" expl="VC for get_min" proved="true">
 <proof prover="2"><result status="valid" time="0.00" steps="29"/></proof>
 </goal>
 <goal name="VC merge" expl="VC for merge" proved="true">
 <proof prover="2"><result status="valid" time="1.29" steps="8262"/></proof>
 </goal>
 <goal name="VC add" expl="VC for add" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="141"/></proof>
 </goal>
 <goal name="VC remove_min" expl="VC for remove_min" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="165"/></proof>
 </goal>
</theory>
<theory name="HeapSort" proved="true">
 <goal name="VC heapsort" expl="VC for heapsort" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC heapsort.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="VC heapsort.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="35"/></proof>
  </goal>
  <goal name="VC heapsort.2" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="VC heapsort.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC heapsort.4" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="26"/></proof>
  </goal>
  <goal name="VC heapsort.5" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="VC heapsort.6" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="109"/></proof>
  </goal>
  <goal name="VC heapsort.7" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="VC heapsort.8" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="VC heapsort.9" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="VC heapsort.10" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="59"/></proof>
  </goal>
  <goal name="VC heapsort.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC heapsort.12" expl="index in array bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC heapsort.13" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="30"/></proof>
  </goal>
  <goal name="VC heapsort.14" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="116"/></proof>
  </goal>
  <goal name="VC heapsort.15" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="40"/></proof>
  </goal>
  <goal name="VC heapsort.16" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC heapsort.17" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.60" steps="1009"/></proof>
  </goal>
  <goal name="VC heapsort.18" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="50"/></proof>
  </goal>
  <goal name="VC heapsort.19" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="92"/></proof>
  </goal>
  <goal name="VC heapsort.20" expl="out of loop bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="VC heapsort.21" expl="out of loop bounds" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
