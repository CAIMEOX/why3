<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.4" timelimit="10" steplimit="0" memlimit="4000"/>
<prover id="1" name="Alt-Ergo" version="2.0.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Z3" version="4.6.0" timelimit="10" steplimit="0" memlimit="1000"/>
<prover id="5" name="Z3" version="4.5.0" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="linked_list_rev.mlw"/>
<theory name="InPlaceRev" proved="true">
 <goal name="mem_decomp&#39;vc" expl="VC for mem_decomp" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="11520"/></proof>
 </goal>
 <goal name="list_seg_frame_ext&#39;vc" expl="VC for list_seg_frame_ext" proved="true">
 <proof prover="2"><result status="valid" time="0.07" steps="16709"/></proof>
 </goal>
 <goal name="list_seg_functional&#39;vc" expl="VC for list_seg_functional" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="13368"/></proof>
 </goal>
 <goal name="list_seg_sublistl&#39;vc" expl="VC for list_seg_sublistl" proved="true">
 <proof prover="2"><result status="valid" time="0.06" steps="16785"/></proof>
 </goal>
 <goal name="list_seg_no_repet&#39;vc" expl="VC for list_seg_no_repet" proved="true">
 <proof prover="2"><result status="valid" time="0.07" steps="18749"/></proof>
 </goal>
 <goal name="list_seg_append&#39;vc" expl="VC for list_seg_append" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="13313"/></proof>
 </goal>
 <goal name="app&#39;vc" expl="VC for app" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="app&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="7754"/></proof>
  </goal>
  <goal name="app&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.00" steps="6407"/></proof>
  </goal>
  <goal name="app&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="8351"/></proof>
  </goal>
  <goal name="app&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="7825"/></proof>
  </goal>
  <goal name="app&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="8784"/></proof>
  </goal>
  <goal name="app&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="9534"/></proof>
  </goal>
  <goal name="app&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="7260"/></proof>
  </goal>
  <goal name="app&#39;vc.7" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="10301"/></proof>
  </goal>
  <goal name="app&#39;vc.8" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="13712"/></proof>
  </goal>
  <goal name="app&#39;vc.9" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="10830"/></proof>
  </goal>
  <goal name="app&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="9147"/></proof>
  </goal>
  <goal name="app&#39;vc.11" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="11772"/></proof>
  </goal>
  <goal name="app&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="10304"/></proof>
  </goal>
  <goal name="app&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.09" steps="50638"/></proof>
  </goal>
  <goal name="app&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="12665"/></proof>
  </goal>
  <goal name="app&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="12581"/></proof>
  </goal>
  <goal name="app&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="15576"/></proof>
  </goal>
  <goal name="app&#39;vc.17" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="7309"/></proof>
  </goal>
  <goal name="app&#39;vc.18" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="12764"/></proof>
  </goal>
  <goal name="app&#39;vc.19" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="11613"/></proof>
  </goal>
  <goal name="app&#39;vc.20" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="13586"/></proof>
  </goal>
  <goal name="app&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="13821"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="in_place_reverse&#39;vc" expl="VC for in_place_reverse" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="in_place_reverse&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="6368"/></proof>
  </goal>
  <goal name="in_place_reverse&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="8191"/></proof>
  </goal>
  <goal name="in_place_reverse&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="8745"/></proof>
  </goal>
  <goal name="in_place_reverse&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="8749"/></proof>
  </goal>
  <goal name="in_place_reverse&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="7418"/></proof>
  </goal>
  <goal name="in_place_reverse&#39;vc.5" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="12258"/></proof>
  </goal>
  <goal name="in_place_reverse&#39;vc.6" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="10411"/></proof>
  </goal>
  <goal name="in_place_reverse&#39;vc.7" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="11067"/></proof>
  </goal>
  <goal name="in_place_reverse&#39;vc.8" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="13516"/></proof>
  </goal>
  <goal name="in_place_reverse&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="12299"/></proof>
  </goal>
  <goal name="in_place_reverse&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="19971"/></proof>
  </goal>
  <goal name="in_place_reverse&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="10082"/></proof>
  </goal>
  <goal name="in_place_reverse&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="8067"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="InPlaceRevSeq" proved="true">
 <goal name="non_empty_seq" proved="true">
 <proof prover="5"><result status="valid" time="0.31" steps="436577"/></proof>
 </goal>
 <goal name="mem_decomp&#39;vc" expl="VC for mem_decomp" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="mem_decomp&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="13211"/></proof>
  </goal>
  <goal name="mem_decomp&#39;vc.1" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="12322"/></proof>
  </goal>
  <goal name="mem_decomp&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="13428"/></proof>
  </goal>
  <goal name="mem_decomp&#39;vc.3" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="13549"/></proof>
  </goal>
  <goal name="mem_decomp&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="12561"/></proof>
  </goal>
  <goal name="mem_decomp&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.08" steps="283"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="list_seg_frame_ext" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="12117"/></proof>
 </goal>
 <goal name="list_seg_functional&#39;vc" expl="VC for list_seg_functional" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="list_seg_functional&#39;vc.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="14368"/></proof>
  </goal>
  <goal name="list_seg_functional&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="12920"/></proof>
  </goal>
  <goal name="list_seg_functional&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="12968"/></proof>
  </goal>
  <goal name="list_seg_functional&#39;vc.3" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="17496"/></proof>
  </goal>
  <goal name="list_seg_functional&#39;vc.4" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.10" steps="248"/></proof>
  </goal>
  <goal name="list_seg_functional&#39;vc.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.06" steps="302"/></proof>
  </goal>
  <goal name="list_seg_functional&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="17141"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="list_seg_tail&#39;vc" expl="VC for list_seg_tail" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="list_seg_tail&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="12748"/></proof>
  </goal>
  <goal name="list_seg_tail&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="16282"/></proof>
  </goal>
  <goal name="list_seg_tail&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="135"/></proof>
  </goal>
  <goal name="list_seg_tail&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="16581"/></proof>
  </goal>
  <goal name="list_seg_tail&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.13" steps="399"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="list_seg_append&#39;vc" expl="VC for list_seg_append" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="list_seg_append&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="12819"/></proof>
  </goal>
  <goal name="list_seg_append&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="17366"/></proof>
  </goal>
  <goal name="list_seg_append&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="14542"/></proof>
  </goal>
  <goal name="list_seg_append&#39;vc.3" expl="precondition" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="list_seg_append&#39;vc.3.0" expl="precondition" proved="true">
   <transf name="split_goal_right" proved="true" >
    <goal name="list_seg_append&#39;vc.3.0.0" expl="precondition" proved="true">
    <proof prover="2"><result status="valid" time="0.10" steps="27090"/></proof>
    </goal>
    <goal name="list_seg_append&#39;vc.3.0.1" expl="precondition" proved="true">
    <proof prover="2"><result status="valid" time="0.11" steps="27918"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_seg_append&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.29" steps="810"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="seq_tail_append" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="76"/></proof>
 </goal>
 <goal name="list_seg_prefix&#39;vc" expl="VC for list_seg_prefix" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="list_seg_prefix&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14341"/></proof>
  </goal>
  <goal name="list_seg_prefix&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="16316"/></proof>
  </goal>
  <goal name="list_seg_prefix&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="14471"/></proof>
  </goal>
  <goal name="list_seg_prefix&#39;vc.3" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="21507"/></proof>
  </goal>
  <goal name="list_seg_prefix&#39;vc.4" expl="precondition" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="list_seg_prefix&#39;vc.4.0" expl="precondition" proved="true">
   <transf name="split_goal_right" proved="true" >
    <goal name="list_seg_prefix&#39;vc.4.0.0" expl="precondition" proved="true">
    <proof prover="2"><result status="valid" time="0.45" steps="78590"/></proof>
    </goal>
    <goal name="list_seg_prefix&#39;vc.4.0.1" expl="precondition" proved="true">
    <proof prover="2"><result status="valid" time="0.74" steps="100845"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="list_seg_prefix&#39;vc.5" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.30" steps="809"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="list_seg_sublistl&#39;vc" expl="VC for list_seg_sublistl" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="list_seg_sublistl&#39;vc.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="10247"/></proof>
  </goal>
  <goal name="list_seg_sublistl&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13304"/></proof>
  </goal>
  <goal name="list_seg_sublistl&#39;vc.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="13313"/></proof>
  </goal>
  <goal name="list_seg_sublistl&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="13375"/></proof>
  </goal>
  <goal name="list_seg_sublistl&#39;vc.4" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="20150"/></proof>
  </goal>
  <goal name="list_seg_sublistl&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="20877"/></proof>
  </goal>
  <goal name="list_seg_sublistl&#39;vc.6" expl="postcondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="list_seg_sublistl&#39;vc.6.0" expl="postcondition" proved="true">
   <transf name="destruct" proved="true" arg1="H">
    <goal name="list_seg_sublistl&#39;vc.6.0.0" expl="postcondition" proved="true">
    <transf name="assert" proved="true" arg1="(l1 = empty)">
     <goal name="list_seg_sublistl&#39;vc.6.0.0.0" expl="asserted formula" proved="true">
     <proof prover="0"><result status="valid" time="2.07"/></proof>
     </goal>
     <goal name="list_seg_sublistl&#39;vc.6.0.0.1" expl="postcondition" proved="true">
     <transf name="assert" proved="true" arg1="(forall l:seq &#39;a. empty ++ l = l)">
      <goal name="list_seg_sublistl&#39;vc.6.0.0.1.0" expl="asserted formula" proved="true">
      <transf name="assert" proved="true" arg1="(forall l:seq &#39;a. empty ++ l == l)">
       <goal name="list_seg_sublistl&#39;vc.6.0.0.1.0.0" expl="asserted formula" proved="true">
       <proof prover="1"><result status="valid" time="0.01" steps="27"/></proof>
       </goal>
       <goal name="list_seg_sublistl&#39;vc.6.0.0.1.0.1" expl="asserted formula" proved="true">
       <proof prover="2"><result status="valid" time="0.04" steps="12439"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="list_seg_sublistl&#39;vc.6.0.0.1.1" expl="postcondition" proved="true">
      <proof prover="2"><result status="valid" time="0.04" steps="11116"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="list_seg_sublistl&#39;vc.6.0.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.02" steps="9510"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="get_tail" proved="true">
 <proof prover="2"><result status="valid" time="0.06" steps="16671"/></proof>
 </goal>
 <goal name="tail_suffix" proved="true">
 <proof prover="1"><result status="valid" time="0.03" steps="68"/></proof>
 </goal>
 <goal name="list_seg_no_repet&#39;vc" expl="VC for list_seg_no_repet" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="list_seg_no_repet&#39;vc.0" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14006"/></proof>
  </goal>
  <goal name="list_seg_no_repet&#39;vc.1" expl="precondition" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="list_seg_no_repet&#39;vc.1.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="13505"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="list_seg_no_repet&#39;vc.2" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.56" steps="868"/></proof>
  </goal>
  <goal name="list_seg_no_repet&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14803"/></proof>
  </goal>
  <goal name="list_seg_no_repet&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="17833"/></proof>
  </goal>
  <goal name="list_seg_no_repet&#39;vc.5" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="21645"/></proof>
  </goal>
  <goal name="list_seg_no_repet&#39;vc.6" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="14227"/></proof>
  </goal>
  <goal name="list_seg_no_repet&#39;vc.7" expl="variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="18495"/></proof>
  </goal>
  <goal name="list_seg_no_repet&#39;vc.8" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="15906"/></proof>
  </goal>
  <goal name="list_seg_no_repet&#39;vc.9" expl="assertion" proved="true">
  <proof prover="2" timelimit="10"><result status="valid" time="1.27" steps="145205"/></proof>
  <proof prover="4"><result status="valid" time="6.63" steps="5910902"/></proof>
  </goal>
  <goal name="list_seg_no_repet&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.20" steps="43716"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="app&#39;vc" expl="VC for app" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="app&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.78" steps="131915"/></proof>
  </goal>
  <goal name="app&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="9576"/></proof>
  </goal>
  <goal name="app&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="9696"/></proof>
  </goal>
  <goal name="app&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="11237"/></proof>
  </goal>
  <goal name="app&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="9641"/></proof>
  </goal>
  <goal name="app&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="12956"/></proof>
  </goal>
  <goal name="app&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="13012"/></proof>
  </goal>
  <goal name="app&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="10942"/></proof>
  </goal>
  <goal name="app&#39;vc.8" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="17000"/></proof>
  </goal>
  <goal name="app&#39;vc.9" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.59" steps="92374"/></proof>
  </goal>
  <goal name="app&#39;vc.10" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14329"/></proof>
  </goal>
  <goal name="app&#39;vc.11" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="14832"/></proof>
  </goal>
  <goal name="app&#39;vc.12" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="23813"/></proof>
  </goal>
  <goal name="app&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="16229"/></proof>
  </goal>
  <goal name="app&#39;vc.14" expl="loop invariant preservation" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="app&#39;vc.14.0" expl="loop invariant preservation" proved="true">
   <transf name="inline_goal" proved="true" >
    <goal name="app&#39;vc.14.0.0" expl="loop invariant preservation" proved="true">
    <transf name="split_goal_right" proved="true" >
     <goal name="app&#39;vc.14.0.0.0" expl="loop invariant preservation" proved="true">
     <proof prover="1"><result status="valid" time="0.03" steps="109"/></proof>
     </goal>
     <goal name="app&#39;vc.14.0.0.1" expl="loop invariant preservation" proved="true">
     <proof prover="1"><result status="valid" time="0.10" steps="296"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="app&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="18947"/></proof>
  </goal>
  <goal name="app&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="19516"/></proof>
  </goal>
  <goal name="app&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="1" timelimit="10" memlimit="4000"><result status="valid" time="1.22" steps="1068"/></proof>
  </goal>
  <goal name="app&#39;vc.18" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="10991"/></proof>
  </goal>
  <goal name="app&#39;vc.19" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="17717"/></proof>
  </goal>
  <goal name="app&#39;vc.20" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="20399"/></proof>
  </goal>
  <goal name="app&#39;vc.21" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.55" steps="664517"/></proof>
  </goal>
  <goal name="app&#39;vc.22" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="1.19" steps="1631"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="in_place_reverse&#39;vc" expl="VC for in_place_reverse" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="in_place_reverse&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="9350"/></proof>
  </goal>
  <goal name="in_place_reverse&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="10363"/></proof>
  </goal>
  <goal name="in_place_reverse&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.03" steps="10930"/></proof>
  </goal>
  <goal name="in_place_reverse&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="15674"/></proof>
  </goal>
  <goal name="in_place_reverse&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="11059"/></proof>
  </goal>
  <goal name="in_place_reverse&#39;vc.5" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="11059"/></proof>
  </goal>
  <goal name="in_place_reverse&#39;vc.6" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.72" steps="86333"/></proof>
  </goal>
  <goal name="in_place_reverse&#39;vc.7" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="17735"/></proof>
  </goal>
  <goal name="in_place_reverse&#39;vc.8" expl="loop variant decrease" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="22316"/></proof>
  </goal>
  <goal name="in_place_reverse&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="35830"/></proof>
  </goal>
  <goal name="in_place_reverse&#39;vc.10" expl="loop invariant preservation" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="in_place_reverse&#39;vc.10.0" expl="loop invariant preservation" proved="true">
   <transf name="split_goal_right" proved="true" >
    <goal name="in_place_reverse&#39;vc.10.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="2"><result status="valid" time="0.08" steps="25874"/></proof>
    </goal>
    <goal name="in_place_reverse&#39;vc.10.0.1" expl="loop invariant preservation" proved="true">
    <proof prover="1"><result status="valid" time="0.15" steps="480"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="in_place_reverse&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="2"><result status="valid" time="0.37" steps="87186"/></proof>
  </goal>
  <goal name="in_place_reverse&#39;vc.12" expl="loop invariant preservation" proved="true">
  <transf name="introduce_premises" proved="true" >
   <goal name="in_place_reverse&#39;vc.12.0" expl="loop invariant preservation" proved="true">
   <proof prover="1" timelimit="30" memlimit="4000"><result status="valid" time="16.15" steps="8525"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="in_place_reverse&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.29" steps="944"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
