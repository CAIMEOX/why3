<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="Z3" version="4.4.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC3" version="2.4.1" timelimit="11" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC4" version="1.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="11" name="Alt-Ergo" version="1.30" timelimit="11" steplimit="0" memlimit="1000"/>
<file name="../mergesort_array.mlw">
<theory name="Elt" proved="true" sum="d41d8cd98f00b204e9800998ecf8427e">
</theory>
<theory name="Merge" sum="3efc6aadcdfe55417138af0586cc270c">
 <goal name="VC merge" expl="VC for merge">
 <transf name="split_goal_wp" >
  <goal name="VC merge.0" expl="loop invariant init" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="VC merge.1" expl="loop invariant init" proved="true">
  <proof prover="11"><result status="valid" time="0.00" steps="11"/></proof>
  </goal>
  <goal name="VC merge.2" expl="loop invariant init" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="VC merge.3" expl="loop invariant init" proved="true">
  <proof prover="11"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
  <goal name="VC merge.4" expl="loop invariant init" proved="true">
  <proof prover="11"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
  <goal name="VC merge.5" expl="loop invariant init" proved="true">
  <proof prover="11"><result status="valid" time="0.00" steps="53"/></proof>
  </goal>
  <goal name="VC merge.6" expl="loop invariant init">
  </goal>
  <goal name="VC merge.7" expl="loop invariant init">
  <proof prover="11" obsolete="true"><result status="valid" time="0.00" steps="1"/></proof>
  </goal>
  <goal name="VC merge.8" expl="index in array bounds">
  <proof prover="11" obsolete="true"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC merge.9" expl="index in array bounds">
  <proof prover="11" obsolete="true"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC merge.10" expl="index in array bounds">
  <proof prover="11" obsolete="true"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="VC merge.11" expl="index in array bounds">
  <proof prover="11" obsolete="true"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="VC merge.12" expl="loop invariant preservation">
  <proof prover="11" obsolete="true"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="VC merge.13" expl="loop invariant preservation">
  <proof prover="11" obsolete="true"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC merge.14" expl="loop invariant preservation">
  <proof prover="0" obsolete="true"><result status="valid" time="0.07"/></proof>
  <proof prover="1" obsolete="true"><result status="unknown" time="1.00"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="unknown" time="5.01"/></proof>
  </goal>
  <goal name="VC merge.15" expl="loop invariant preservation">
  <proof prover="0" obsolete="true"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="VC merge.16" expl="loop invariant preservation">
  <transf name="case" arg1="(x&lt;k)">
   <goal name="VC merge.16.0" expl="true case (loop invariant preservation)">
   <proof prover="0" timelimit="10" memlimit="4000" obsolete="true"><result status="valid" time="2.30"/></proof>
   </goal>
   <goal name="VC merge.16.1" expl="false case (loop invariant preservation)">
   <transf name="case" arg1="(j=y)">
    <goal name="VC merge.16.1.0" expl="false case (true case. loop invariant preservation)">
    <proof prover="0" obsolete="true"><result status="valid" time="0.05"/></proof>
    </goal>
    <goal name="VC merge.16.1.1" expl="false case (loop invariant preservation)">
    <transf name="assert" arg1="(le a[k] tmp[j])">
     <goal name="VC merge.16.1.1.0">
     <proof prover="0" obsolete="true"><result status="valid" time="0.05"/></proof>
     </goal>
     <goal name="VC merge.16.1.1.1" expl="false case (loop invariant preservation)">
     <proof prover="1" obsolete="true"><result status="valid" time="0.23"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC merge.17" expl="loop invariant preservation">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="1" obsolete="true"><result status="unknown" time="0.99"/></proof>
  <proof prover="4" obsolete="true"><result status="unknown" time="2.04"/></proof>
  <proof prover="11" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_goal_wp" >
   <goal name="VC merge.17.0" expl="loop invariant preservation">
   <proof prover="1" timelimit="10" memlimit="4000" obsolete="true"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC merge.17.1" expl="loop invariant preservation">
   <proof prover="0" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
   <proof prover="1" timelimit="10" memlimit="4000" obsolete="true"><result status="unknown" time="9.83"/></proof>
   <proof prover="4" timelimit="10" memlimit="4000" obsolete="true"><result status="unknown" time="9.91"/></proof>
   <proof prover="11" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="9.87"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC merge.18" expl="loop invariant preservation">
  </goal>
  <goal name="VC merge.19" expl="loop invariant preservation">
  <proof prover="11" obsolete="true"><result status="valid" time="0.82" steps="498"/></proof>
  </goal>
  <goal name="VC merge.20" expl="index in array bounds">
  <proof prover="11" obsolete="true"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="VC merge.21" expl="index in array bounds">
  <proof prover="11" obsolete="true"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC merge.22" expl="loop invariant preservation">
  <proof prover="11" obsolete="true"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC merge.23" expl="loop invariant preservation">
  <proof prover="11" obsolete="true"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC merge.24" expl="loop invariant preservation">
  <proof prover="0" obsolete="true"><result status="valid" time="0.82"/></proof>
  <proof prover="1" obsolete="true"><result status="unknown" time="0.96"/></proof>
  <proof prover="4" timelimit="5" obsolete="true"><result status="unknown" time="5.02"/></proof>
  </goal>
  <goal name="VC merge.25" expl="loop invariant preservation">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="1" obsolete="true"><result status="unknown" time="1.00"/></proof>
  <proof prover="4" obsolete="true"><result status="unknown" time="1.01"/></proof>
  <proof prover="11" timelimit="1" obsolete="true"><result status="timeout" time="0.96"/></proof>
  <transf name="split_goal_wp" >
   <goal name="VC merge.25.0" expl="loop invariant preservation">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="1" obsolete="true"><result status="unknown" time="1.00"/></proof>
   <proof prover="11" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
   <goal name="VC merge.25.1" expl="loop invariant preservation">
   <proof prover="1" obsolete="true"><result status="valid" time="0.11"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC merge.26" expl="loop invariant preservation">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="1" obsolete="true"><result status="unknown" time="1.00"/></proof>
  <proof prover="4" obsolete="true"><result status="unknown" time="1.04"/></proof>
  <proof prover="11" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_goal_wp" >
   <goal name="VC merge.26.0" expl="loop invariant preservation">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="1" obsolete="true"><result status="unknown" time="1.01"/></proof>
   <proof prover="11" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
   <goal name="VC merge.26.1" expl="loop invariant preservation">
   <proof prover="0" obsolete="true"><result status="valid" time="0.43"/></proof>
   <proof prover="1" obsolete="true"><result status="unknown" time="0.99"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC merge.27" expl="loop invariant preservation">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="1" obsolete="true"><result status="unknown" time="1.02"/></proof>
  <proof prover="4" obsolete="true"><result status="unknown" time="2.02"/></proof>
  <proof prover="11" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_goal_wp" >
   <goal name="VC merge.27.0" expl="loop invariant preservation">
   <proof prover="0" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
   <proof prover="1" timelimit="10" memlimit="4000" obsolete="true"><result status="unknown" time="9.82"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="11" timelimit="10" memlimit="4000" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
   <goal name="VC merge.27.1" expl="loop invariant preservation">
   <proof prover="0" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
   <proof prover="1" timelimit="10" memlimit="4000" obsolete="true"><result status="unknown" time="9.92"/></proof>
   <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="11" timelimit="10" memlimit="4000" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC merge.28" expl="loop invariant preservation">
  </goal>
  <goal name="VC merge.29" expl="loop invariant preservation">
  <proof prover="11" obsolete="true"><result status="valid" time="0.59" steps="359"/></proof>
  </goal>
  <goal name="VC merge.30" expl="postcondition">
  <proof prover="11" obsolete="true"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC merge.31" expl="postcondition">
  <proof prover="0" timelimit="10" memlimit="4000"><result status="timeout" time="10.00"/></proof>
  <proof prover="1" timelimit="10" memlimit="4000"><result status="unknown" time="9.92"/></proof>
  <proof prover="4" timelimit="10" memlimit="4000"><result status="unknown" time="9.87"/></proof>
  <proof prover="11" timelimit="10" memlimit="4000"><result status="timeout" time="9.94"/></proof>
  </goal>
  <goal name="VC merge.32" expl="postcondition">
  <proof prover="1" obsolete="true"><result status="valid" time="0.07"/></proof>
  <proof prover="11" obsolete="true"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="VC merge.33" expl="out of loop bounds" proved="true">
  <proof prover="1"><result status="valid" time="0.05"/></proof>
  <proof prover="11" obsolete="true"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC merge_using" expl="VC for merge_using">
 <transf name="split_goal_wp" >
  <goal name="VC merge_using.0" expl="index in array bounds" proved="true">
  <proof prover="11"><result status="valid" time="0.00" steps="10"/></proof>
  </goal>
  <goal name="VC merge_using.1" expl="index in array bounds" proved="true">
  <proof prover="11"><result status="valid" time="0.00" steps="10"/></proof>
  </goal>
  <goal name="VC merge_using.2" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="VC merge_using.3" expl="postcondition" proved="true">
  <proof prover="4" timelimit="11"><result status="valid" time="0.31"/></proof>
  </goal>
  <goal name="VC merge_using.4" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="VC merge_using.5" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.00" steps="1"/></proof>
  </goal>
  <goal name="VC merge_using.6" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.00" steps="11"/></proof>
  </goal>
  <goal name="VC merge_using.7" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
  <goal name="VC merge_using.8" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="33"/></proof>
  </goal>
  <goal name="VC merge_using.9" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="97"/></proof>
  </goal>
  <goal name="VC merge_using.10" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="100"/></proof>
  </goal>
  <goal name="VC merge_using.11" expl="assertion">
  <transf name="inline_goal" >
   <goal name="VC merge_using.11.0" expl="assertion">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="1" obsolete="true"><result status="unknown" time="0.99"/></proof>
   <proof prover="4" obsolete="true"><result status="unknown" time="2.02"/></proof>
   <proof prover="11" timelimit="1" obsolete="true"><result status="timeout" time="0.98"/></proof>
   <transf name="split_goal_wp" >
    <goal name="VC merge_using.11.0.0" expl="VC for merge_using">
    <proof prover="1" obsolete="true"><result status="valid" time="0.04"/></proof>
    </goal>
    <goal name="VC merge_using.11.0.1" expl="VC for merge_using">
    <proof prover="1" obsolete="true"><result status="valid" time="0.05"/></proof>
    </goal>
    <goal name="VC merge_using.11.0.2" expl="VC for merge_using">
    <proof prover="1" obsolete="true"><result status="valid" time="0.07"/></proof>
    </goal>
    <goal name="VC merge_using.11.0.3" expl="VC for merge_using">
    <proof prover="1" obsolete="true"><result status="valid" time="0.09"/></proof>
    </goal>
    <goal name="VC merge_using.11.0.4" expl="VC for merge_using">
    <proof prover="0" obsolete="true"><result status="valid" time="0.09"/></proof>
    <proof prover="1" obsolete="true"><result status="unknown" time="1.98"/></proof>
    </goal>
    <goal name="VC merge_using.11.0.5" expl="VC for merge_using">
    <proof prover="0" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
    <proof prover="1" timelimit="10" memlimit="4000" obsolete="true"><result status="unknown" time="9.82"/></proof>
    <proof prover="4" obsolete="true"><result status="unknown" time="1.09"/></proof>
    <proof prover="11" timelimit="10" memlimit="4000" obsolete="true"><result status="failure" time="0.00"/></proof>
    </goal>
    <goal name="VC merge_using.11.0.6" expl="VC for merge_using">
    <proof prover="0" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="1" obsolete="true"><result status="unknown" time="1.99"/></proof>
    <proof prover="11" timelimit="1" obsolete="true"><result status="valid" time="0.14" steps="269"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC merge_using.12" expl="postcondition">
  <proof prover="11" obsolete="true"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC merge_using.13" expl="postcondition">
  <proof prover="11" obsolete="true"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC merge_using.14" expl="postcondition">
  <proof prover="11" obsolete="true"><result status="valid" time="0.00" steps="30"/></proof>
  </goal>
  <goal name="VC merge_using.15" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.00" steps="24"/></proof>
  </goal>
  <goal name="VC merge_using.16" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="VC merge_using.17" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="1"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="TopDownMergesort" proved="true" sum="b1d0533d5968ee5d307bd9b4069535d5">
 <goal name="VC mergesort_rec" expl="VC for mergesort_rec" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC mergesort_rec.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="timeout" time="1.00"/></proof>
  <proof prover="1"><result status="valid" time="0.13"/></proof>
  </goal>
  <goal name="VC mergesort_rec.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10"/></proof>
  </goal>
  <goal name="VC mergesort_rec.2" expl="check division by zero" proved="true">
  <proof prover="0"><result status="valid" time="0.00"/></proof>
  </goal>
  <goal name="VC mergesort_rec.3" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mergesort_rec.4" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC mergesort_rec.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC mergesort_rec.6" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC mergesort_rec.7" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC mergesort_rec.8" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC mergesort_rec.9" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC mergesort_rec.10" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mergesort_rec.11" expl="precondition" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="VC mergesort_rec.11.0" expl="precondition" proved="true">
   <proof prover="0"><result status="timeout" time="1.00"/></proof>
   <proof prover="1" timelimit="10" memlimit="4000"><result status="valid" time="0.78"/></proof>
   <proof prover="4"><result status="timeout" time="1.00"/></proof>
   <proof prover="11" timelimit="1"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mergesort_rec.12" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC mergesort_rec.13" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC mergesort_rec.14" expl="postcondition" proved="true">
  <proof prover="11" timelimit="1"><result status="valid" time="0.09" steps="283"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC mergesort" expl="VC for mergesort" proved="true">
 <proof prover="11"><result status="valid" time="0.01" steps="24"/></proof>
 </goal>
</theory>
<theory name="BottomUpMergesort" sum="2b6989c73fb4de7b269dd1ad0d60dcec">
 <goal name="VC bottom_up_mergesort" expl="VC for bottom_up_mergesort">
 <transf name="split_goal_wp" >
  <goal name="VC bottom_up_mergesort.0" expl="loop invariant init" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="2"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.1" expl="loop invariant init" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="4"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.2" expl="loop invariant init" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.3" expl="loop invariant init" proved="true">
  <proof prover="11"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.4" expl="loop invariant init" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.5" expl="loop invariant init" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.6" expl="loop invariant init" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.7" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.8" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.03" steps="26"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.9" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.10" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.03" steps="88"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.11" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="66"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.12" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.13" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.02" steps="19"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.14" expl="assertion">
  <transf name="inline_goal" >
   <goal name="VC bottom_up_mergesort.14.0" expl="assertion">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="1" obsolete="true"><result status="unknown" time="0.96"/></proof>
   <proof prover="4" obsolete="true"><result status="unknown" time="1.06"/></proof>
   <proof prover="11" timelimit="1" obsolete="true"><result status="timeout" time="0.99"/></proof>
   <transf name="split_goal_wp" >
    <goal name="VC bottom_up_mergesort.14.0.0" expl="VC for bottom_up_mergesort" proved="true">
    <proof prover="1"><result status="valid" time="0.08"/></proof>
    </goal>
    <goal name="VC bottom_up_mergesort.14.0.1" expl="VC for bottom_up_mergesort">
    <proof prover="0" timelimit="10" memlimit="4000"><result status="failure" time="0.00"/></proof>
    <proof prover="1" timelimit="10" memlimit="4000"><result status="unknown" time="9.92"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    <proof prover="11" timelimit="1"><result status="timeout" time="1.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC bottom_up_mergesort.15" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.16" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.17" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="3.49" steps="871"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.18" expl="assertion">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="4" obsolete="true"><result status="unknown" time="2.54"/></proof>
  <proof prover="11" timelimit="1" obsolete="true"><result status="timeout" time="0.99"/></proof>
  <transf name="split_goal_wp" >
   <goal name="VC bottom_up_mergesort.18.0" expl="assertion">
   <proof prover="0" timelimit="10" memlimit="4000"><result status="failure" time="0.00"/></proof>
   <proof prover="1" timelimit="10" memlimit="4000"><result status="unknown" time="9.92"/></proof>
   <proof prover="4"><result status="timeout" time="2.00"/></proof>
   <proof prover="11" timelimit="1"><result status="timeout" time="0.98"/></proof>
   </goal>
   <goal name="VC bottom_up_mergesort.18.1" expl="assertion">
   <proof prover="0" timelimit="10" memlimit="4000"><result status="failure" time="0.00"/></proof>
   <proof prover="1" timelimit="10" memlimit="4000"><result status="unknown" time="9.84"/></proof>
   <proof prover="4"><result status="timeout" time="2.00"/></proof>
   <proof prover="11" timelimit="1"><result status="timeout" time="0.99"/></proof>
   </goal>
   <goal name="VC bottom_up_mergesort.18.2" expl="assertion" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="11" timelimit="1"><result status="valid" time="0.06" steps="108"/></proof>
   </goal>
   <goal name="VC bottom_up_mergesort.18.3" expl="assertion" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="11" timelimit="1"><result status="valid" time="0.07" steps="146"/></proof>
   </goal>
   <goal name="VC bottom_up_mergesort.18.4" expl="assertion" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="11" timelimit="1"><result status="valid" time="0.02" steps="26"/></proof>
   </goal>
   <goal name="VC bottom_up_mergesort.18.5" expl="assertion" proved="true">
   <proof prover="0" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="11" timelimit="1"><result status="valid" time="0.02" steps="26"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC bottom_up_mergesort.19" expl="loop variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.20" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.21" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="36"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.22" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="67"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.23" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.02" steps="51"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.24" expl="assertion" proved="true">
  <transf name="split_goal_wp" proved="true" >
   <goal name="VC bottom_up_mergesort.24.0" expl="assertion" proved="true">
   <proof prover="11"><result status="valid" time="0.01" steps="15"/></proof>
   </goal>
   <goal name="VC bottom_up_mergesort.24.1" expl="assertion" proved="true">
   <proof prover="11"><result status="valid" time="0.03" steps="28"/></proof>
   </goal>
   <goal name="VC bottom_up_mergesort.24.2" expl="assertion" proved="true">
   <proof prover="11"><result status="valid" time="0.03" steps="28"/></proof>
   </goal>
   <goal name="VC bottom_up_mergesort.24.3" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.23"/></proof>
   </goal>
   <goal name="VC bottom_up_mergesort.24.4" expl="assertion" proved="true">
   <proof prover="3"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="VC bottom_up_mergesort.24.5" expl="assertion" proved="true">
   <proof prover="11"><result status="valid" time="0.01" steps="20"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC bottom_up_mergesort.25" expl="loop variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.26" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.27" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.28" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.03" steps="32"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.29" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.30" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="VC bottom_up_mergesort.31" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="NaturalMergesort" sum="786836ad114c4d023ff9c823ea07b4b1">
 <goal name="VC find_run" expl="VC for find_run" proved="true">
 <proof prover="11"><result status="valid" time="0.02" steps="138"/></proof>
 </goal>
 <goal name="VC natural_mergesort" expl="VC for natural_mergesort">
 <transf name="split_goal_wp" >
  <goal name="VC natural_mergesort.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="VC natural_mergesort.1" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="4"/></proof>
  </goal>
  <goal name="VC natural_mergesort.2" expl="loop invariant init" proved="true">
  <proof prover="11"><result status="valid" time="0.00" steps="4"/></proof>
  </goal>
  <goal name="VC natural_mergesort.3" expl="loop invariant init" proved="true">
  <proof prover="11"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
  <goal name="VC natural_mergesort.4" expl="loop invariant init" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="VC natural_mergesort.5" expl="loop invariant init" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="VC natural_mergesort.6" expl="loop invariant init" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="VC natural_mergesort.7" expl="loop invariant init" proved="true">
  <proof prover="11"><result status="valid" time="0.00" steps="1"/></proof>
  </goal>
  <goal name="VC natural_mergesort.8" expl="loop invariant init" proved="true">
  <proof prover="11"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
  <goal name="VC natural_mergesort.9" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="VC natural_mergesort.10" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC natural_mergesort.11" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="29"/></proof>
  </goal>
  <goal name="VC natural_mergesort.12" expl="loop variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="VC natural_mergesort.13" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.02" steps="25"/></proof>
  </goal>
  <goal name="VC natural_mergesort.14" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="30"/></proof>
  </goal>
  <goal name="VC natural_mergesort.15" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="VC natural_mergesort.16" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="64"/></proof>
  </goal>
  <goal name="VC natural_mergesort.17" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="29"/></proof>
  </goal>
  <goal name="VC natural_mergesort.18" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="29"/></proof>
  </goal>
  <goal name="VC natural_mergesort.19" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="VC natural_mergesort.20" expl="assertion">
  <transf name="inline_goal" >
   <goal name="VC natural_mergesort.20.0" expl="assertion">
   <transf name="split_goal_wp" >
    <goal name="VC natural_mergesort.20.0.0" expl="VC for natural_mergesort" proved="true">
    <proof prover="11"><result status="valid" time="0.01" steps="24"/></proof>
    </goal>
    <goal name="VC natural_mergesort.20.0.1" expl="VC for natural_mergesort">
    <proof prover="0" timelimit="10" memlimit="4000"><result status="failure" time="0.00"/></proof>
    <proof prover="1" timelimit="10" memlimit="4000"><result status="unknown" time="9.93"/></proof>
    <proof prover="4"><result status="timeout" time="1.00"/></proof>
    <proof prover="11" timelimit="1"><result status="timeout" time="0.96"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC natural_mergesort.21" expl="loop variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="VC natural_mergesort.22" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="33"/></proof>
  </goal>
  <goal name="VC natural_mergesort.23" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.02" steps="85"/></proof>
  </goal>
  <goal name="VC natural_mergesort.24" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="36"/></proof>
  </goal>
  <goal name="VC natural_mergesort.25" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.02" steps="128"/></proof>
  </goal>
  <goal name="VC natural_mergesort.26" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.02" steps="47"/></proof>
  </goal>
  <goal name="VC natural_mergesort.27" expl="loop variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="33"/></proof>
  </goal>
  <goal name="VC natural_mergesort.28" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="40"/></proof>
  </goal>
  <goal name="VC natural_mergesort.29" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="35"/></proof>
  </goal>
  <goal name="VC natural_mergesort.30" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="154"/></proof>
  </goal>
  <goal name="VC natural_mergesort.31" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="37"/></proof>
  </goal>
  <goal name="VC natural_mergesort.32" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="46"/></proof>
  </goal>
  <goal name="VC natural_mergesort.33" expl="loop variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="VC natural_mergesort.34" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
  <goal name="VC natural_mergesort.35" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="VC natural_mergesort.36" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="1"/></proof>
  </goal>
  <goal name="VC natural_mergesort.37" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="1"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC naturalrec" expl="VC for naturalrec" proved="true">
 <transf name="split_goal_wp" proved="true" >
  <goal name="VC naturalrec.0" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="1"/></proof>
  </goal>
  <goal name="VC naturalrec.1" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="VC naturalrec.2" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="VC naturalrec.3" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="1"/></proof>
  </goal>
  <goal name="VC naturalrec.4" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="6"/></proof>
  </goal>
  <goal name="VC naturalrec.5" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="1"/></proof>
  </goal>
  <goal name="VC naturalrec.6" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="VC naturalrec.7" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="VC naturalrec.8" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.00" steps="1"/></proof>
  </goal>
  <goal name="VC naturalrec.9" expl="loop invariant init" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="VC naturalrec.10" expl="loop invariant init" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="VC naturalrec.11" expl="loop invariant init" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="VC naturalrec.12" expl="loop invariant init" proved="true">
  <proof prover="11"><result status="valid" time="0.00" steps="1"/></proof>
  </goal>
  <goal name="VC naturalrec.13" expl="variant decrease" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC naturalrec.14" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="VC naturalrec.15" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="VC naturalrec.16" expl="assertion" proved="true">
  <proof prover="0"><result status="timeout" time="1.00"/></proof>
  <proof prover="1" timelimit="10" memlimit="4000"><result status="valid" time="2.14"/></proof>
  <proof prover="4"><result status="unknown" time="2.01"/></proof>
  <proof prover="11" timelimit="1"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="VC naturalrec.17" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.11" steps="179"/></proof>
  </goal>
  <goal name="VC naturalrec.18" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="194"/></proof>
  </goal>
  <goal name="VC naturalrec.19" expl="precondition" proved="true">
  <proof prover="11"><result status="valid" time="0.02" steps="30"/></proof>
  </goal>
  <goal name="VC naturalrec.20" expl="assertion" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="VC naturalrec.20.0" expl="assertion" proved="true">
   <transf name="split_goal_wp" proved="true" >
    <goal name="VC naturalrec.20.0.0" expl="VC for naturalrec" proved="true">
    <proof prover="1"><result status="valid" time="0.04"/></proof>
    </goal>
    <goal name="VC naturalrec.20.0.1" expl="VC for naturalrec" proved="true">
    <proof prover="1"><result status="valid" time="0.05"/></proof>
    </goal>
    <goal name="VC naturalrec.20.0.2" expl="VC for naturalrec" proved="true">
    <proof prover="1"><result status="valid" time="0.06"/></proof>
    </goal>
    <goal name="VC naturalrec.20.0.3" expl="VC for naturalrec" proved="true">
    <proof prover="1"><result status="valid" time="0.07"/></proof>
    </goal>
    <goal name="VC naturalrec.20.0.4" expl="VC for naturalrec" proved="true">
    <proof prover="0"><result status="valid" time="0.09"/></proof>
    </goal>
    <goal name="VC naturalrec.20.0.5" expl="VC for naturalrec" proved="true">
    <proof prover="0"><result status="valid" time="0.04"/></proof>
    </goal>
    <goal name="VC naturalrec.20.0.6" expl="VC for naturalrec" proved="true">
    <proof prover="11" timelimit="1"><result status="valid" time="0.04" steps="40"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC naturalrec.21" expl="assertion" proved="true">
  <proof prover="11"><result status="valid" time="0.02" steps="62"/></proof>
  </goal>
  <goal name="VC naturalrec.22" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.00" steps="32"/></proof>
  </goal>
  <goal name="VC naturalrec.23" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.00" steps="31"/></proof>
  </goal>
  <goal name="VC naturalrec.24" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="63"/></proof>
  </goal>
  <goal name="VC naturalrec.25" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="176"/></proof>
  </goal>
  <goal name="VC naturalrec.26" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="60"/></proof>
  </goal>
  <goal name="VC naturalrec.27" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="33"/></proof>
  </goal>
  <goal name="VC naturalrec.28" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.03" steps="67"/></proof>
  </goal>
  <goal name="VC naturalrec.29" expl="loop invariant preservation" proved="true">
  <proof prover="11"><result status="valid" time="0.02" steps="180"/></proof>
  </goal>
  <goal name="VC naturalrec.30" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC naturalrec.31" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC naturalrec.32" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.04" steps="18"/></proof>
  </goal>
  <goal name="VC naturalrec.33" expl="postcondition" proved="true">
  <proof prover="11"><result status="valid" time="0.02" steps="29"/></proof>
  </goal>
  <goal name="VC naturalrec.34" expl="out of loop bounds" proved="true">
  <proof prover="11"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC natural_mergesort2" expl="VC for natural_mergesort2" proved="true">
 <proof prover="11"><result status="valid" time="0.01" steps="46"/></proof>
 </goal>
</theory>
</file>
</why3session>
