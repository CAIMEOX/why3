<check-ce>Check model 0 ("bench/check-ce/tuple.mlw", line 5, characters 38-43)
<check-ce>Validating model:
          File tuple.mlw:
            Line 5:
              a = {"type": "Integer", "val": "0"}
              b = {"type": "Integer", "val": "-1"}
              result = {"type": "Integer", "val": "0"}
<check-ce>Interpreting concretly
<rac-values>RHS evaluated for global `zero` at "WHY3DATA/stdlib/int.mlw", line 13, characters 15-19: 0
<rac-values>RHS evaluated for global `one` at "WHY3DATA/stdlib/int.mlw", line 14, characters 15-18: 1
<check-ce>Interpreting abstractly
<rac-values>RHS evaluated for global `zero` at "WHY3DATA/stdlib/int.mlw", line 13, characters 15-19: 0
<rac-values>RHS evaluated for global `one` at "WHY3DATA/stdlib/int.mlw", line 14, characters 15-18: 1
<check-ce>Result of checking model 0:
            - Concrete: UNKNOWN (Concrete RAC terminated because missing value for parameter `x`)
              
            - Abstract: UNKNOWN (Abstract RAC terminated because missing value for parameter `x`)
              
<check-ce>Check model 1 ("bench/check-ce/tuple.mlw", line 5, characters 38-43)
<check-ce>Validating model:
          File tuple.mlw:
            Line 5:
              a = {"type": "Integer", "val": "-1"}
              b = {"type": "Integer", "val": "0"}
              result = {"type": "Integer", "val": "0"}
<check-ce>Interpreting concretly
<rac-values>RHS evaluated for global `zero` at "WHY3DATA/stdlib/int.mlw", line 13, characters 15-19: 0
<rac-values>RHS evaluated for global `one` at "WHY3DATA/stdlib/int.mlw", line 14, characters 15-18: 1
<check-ce>Interpreting abstractly
<rac-values>RHS evaluated for global `zero` at "WHY3DATA/stdlib/int.mlw", line 13, characters 15-19: 0
<rac-values>RHS evaluated for global `one` at "WHY3DATA/stdlib/int.mlw", line 14, characters 15-18: 1
<check-ce>Result of checking model 1:
            - Concrete: UNKNOWN (Concrete RAC terminated because missing value for parameter `x`)
              
            - Abstract: UNKNOWN (Abstract RAC terminated because missing value for parameter `x`)
              
<check-ce>Check model 2 ("bench/check-ce/tuple.mlw", line 5, characters 38-43)
<check-ce>Validating model:
          File tuple.mlw:
            Line 5:
              a = {"type": "Integer", "val": "-1"}
              b = {"type": "Integer", "val": "0"}
              result = {"type": "Integer", "val": "0"}
<check-ce>Interpreting concretly
<rac-values>RHS evaluated for global `zero` at "WHY3DATA/stdlib/int.mlw", line 13, characters 15-19: 0
<rac-values>RHS evaluated for global `one` at "WHY3DATA/stdlib/int.mlw", line 14, characters 15-18: 1
<check-ce>Interpreting abstractly
<rac-values>RHS evaluated for global `zero` at "WHY3DATA/stdlib/int.mlw", line 13, characters 15-19: 0
<rac-values>RHS evaluated for global `one` at "WHY3DATA/stdlib/int.mlw", line 14, characters 15-18: 1
<check-ce>Result of checking model 2:
            - Concrete: UNKNOWN (Concrete RAC terminated because missing value for parameter `x`)
              
            - Abstract: UNKNOWN (Abstract RAC terminated because missing value for parameter `x`)
              
<check-ce-summary>Results:
- Checked model 0: UNKNOWN
  concrete: UNKNOWN, Concrete RAC terminated because missing value for parameter `x`
  abstract: UNKNOWN, Abstract RAC terminated because missing value for parameter `x`
- Checked model 1: UNKNOWN
  concrete: UNKNOWN, Concrete RAC terminated because missing value for parameter `x`
  abstract: UNKNOWN, Abstract RAC terminated because missing value for parameter `x`
- Selected model 2: UNKNOWN
  concrete: UNKNOWN, Concrete RAC terminated because missing value for parameter `x`
  abstract: UNKNOWN, Abstract RAC terminated because missing value for parameter `x`
File "bench/check-ce/tuple.mlw", line 5, characters 38-43:
Goal Postcondition from verification condition swap'vc.
Prover result is: Unknown (unknown + incomplete) (0.05s, 5900 steps).
The following counterexample model could not be verified
  (Concrete RAC terminated because missing value for parameter `x`, Abstract RAC terminated because missing value for parameter `x`):
File tuple.mlw:
  Line 5:
    a = -1
    b = 0
    result = 0

