<check-ce>Check model 0 ("bench/check-ce/anonymous2.mlw", line 9, characters 11-16)
<check-ce>Validating model:
          File anonymous2.mlw:
            Line 8:
              z =
                {"type": "Record",
                 "val":
                  {"Field":
                    [{"field": "contents",
                      "value": {"type": "Integer", "val": "0"}}]}}
            Line 9:
              the check fails with all inputs
<check-ce>Interpreting concretly
<rac-values>RHS evaluated for global `zero` at "WHY3DATA/stdlib/int.mlw", line 13, characters 15-19: 0
<rac-values>RHS evaluated for global `one` at "WHY3DATA/stdlib/int.mlw", line 14, characters 15-18: 1
<rac-values>Type default value for variable `result` at "bench/check-ce/anonymous2.mlw", line 3, characters 9-14 at "bench/check-ce/anonymous2.mlw", line 3, characters 9-14: 0
<rac-values>RHS evaluated for global `z` at "bench/check-ce/anonymous2.mlw", line 3, characters 8-9: {contents=
                                                                    0}
<check-ce>Interpreting abstractly
<rac-values>RHS evaluated for global `zero` at "WHY3DATA/stdlib/int.mlw", line 13, characters 15-19: 0
<rac-values>RHS evaluated for global `one` at "WHY3DATA/stdlib/int.mlw", line 14, characters 15-18: 1
<rac-values>Type default value for variable `result` at "bench/check-ce/anonymous2.mlw", line 3, characters 9-14 at "bench/check-ce/anonymous2.mlw", line 3, characters 9-14: 0
<rac-values>RHS evaluated for global `z` at "bench/check-ce/anonymous2.mlw", line 3, characters 8-9: {contents=
                                                                    0}
<check-ce>Result of checking model 0:
            - Concrete: UNKNOWN (Concrete RAC terminated because missing value for parameter `x`)
              
            - Abstract: UNKNOWN (Abstract RAC terminated because missing value for parameter `x`)
              
<check-ce>Check model 1 ("bench/check-ce/anonymous2.mlw", line 9, characters 11-16)
<check-ce>Validating model:
          File anonymous2.mlw:
            Line 5:
              x = {"type": "Integer", "val": "1"}
            Line 8:
              z =
                {"type": "Record",
                 "val":
                  {"Field":
                    [{"field": "contents",
                      "value": {"type": "Integer", "val": "0"}}]}}
            Line 9:
              z =
                {"type": "Record",
                 "val":
                  {"Field":
                    [{"field": "contents",
                      "value": {"type": "Integer", "val": "0"}}]}}
<check-ce>Interpreting concretly
<rac-values>RHS evaluated for global `zero` at "WHY3DATA/stdlib/int.mlw", line 13, characters 15-19: 0
<rac-values>RHS evaluated for global `one` at "WHY3DATA/stdlib/int.mlw", line 14, characters 15-18: 1
<rac-values>Type default value for variable `result` at "bench/check-ce/anonymous2.mlw", line 3, characters 9-14 at "bench/check-ce/anonymous2.mlw", line 3, characters 9-14: 0
<rac-values>RHS evaluated for global `z` at "bench/check-ce/anonymous2.mlw", line 3, characters 8-9: {contents=
                                                                    0}
<rac-values>Value from model for parameter `x` at "bench/check-ce/anonymous2.mlw", line 5, characters 7-8: 1
<check-ce>Interpreting abstractly
<rac-values>RHS evaluated for global `zero` at "WHY3DATA/stdlib/int.mlw", line 13, characters 15-19: 0
<rac-values>RHS evaluated for global `one` at "WHY3DATA/stdlib/int.mlw", line 14, characters 15-18: 1
<rac-values>Type default value for variable `result` at "bench/check-ce/anonymous2.mlw", line 3, characters 9-14 at "bench/check-ce/anonymous2.mlw", line 3, characters 9-14: 0
<rac-values>RHS evaluated for global `z` at "bench/check-ce/anonymous2.mlw", line 3, characters 8-9: {contents=
                                                                    0}
<rac-values>Value from model for parameter `x` at "bench/check-ce/anonymous2.mlw", line 5, characters 7-8: 1
<rac-values>Value from model for variable `z` at "bench/check-ce/anonymous2.mlw", line 8, characters 2-25 at "bench/check-ce/anonymous2.mlw", line 8, characters 2-25: {contents=
                                                                    0}
<rac-values>Type default value for variable `result` at "bench/check-ce/anonymous2.mlw", line 8, characters 2-25 at "bench/check-ce/anonymous2.mlw", line 8, characters 2-25: ()
<check-ce>Result of checking model 1:
            - Concrete: NORMAL (Concrete RAC does not confirm the counter-example, no contradiction during execution)
              File int.mlw:
                Line 13:
                  Constant zero initialization
                  zero = 0
                Line 14:
                  Constant one initialization
                  one = 1
              File anonymous2.mlw:
                Line 3:
                  Constant z initialization
                  (abstract) execution of unimplemented function``
                  result = 0
                  Concrete execution of function `ref` with args:
                    contents = 0
                  Concrete execution of function `ref'mk` with args:
                    contents = 0
                  z = {contents= 0}
                Line 5:
                  x = 1
                  x = 1
                  Execution of main function `f` with env:
                    z = {contents= 0}
                    x = 1
                    zero = 0
                    one = 1
                Line 8:
                  Concrete execution of function `h` with args:
                    y = 1
                  Concrete execution of function `contents` with args:
                    arg = {contents= 0}
                  Concrete execution of function `(+)` with args:
                    _ = 0
                    _ = 1
                Line 5:
                  Execution of main function terminated normally
            - Abstract: FAILURE (Abstract RAC confirms the counter-example)
              File int.mlw:
                Line 13:
                  Constant zero initialization
                  zero = 0
                Line 14:
                  Constant one initialization
                  one = 1
              File anonymous2.mlw:
                Line 3:
                  Constant z initialization
                  (abstract) execution of unimplemented function``
                  result = 0
                  Concrete execution of function `ref` with args:
                    contents = 0
                  Concrete execution of function `ref'mk` with args:
                    contents = 0
                  z = {contents= 0}
                Line 5:
                  x = 1
                  x = 1
                  Execution of main function `f` with env:
                    z = {contents= 0}
                    x = 1
                    zero = 0
                    one = 1
                Line 8:
                  Abstract execution of function `h` with args:
                    y = 1
                  z = {contents= 0}
                  result = ()
                Line 9:
                  Property failure, assertion with:
                    z = {contents= 0}
<check-ce-summary>Results:
- Checked model 0: UNKNOWN
  concrete: UNKNOWN, Concrete RAC terminated because missing value for parameter `x`
  abstract: UNKNOWN, Abstract RAC terminated because missing value for parameter `x`
- Selected model 1: SW
  concrete: NORMAL, Concrete RAC does not confirm the counter-example, no contradiction during execution
  abstract: FAILURE, Abstract RAC confirms the counter-example
File "bench/check-ce/anonymous2.mlw", line 9, characters 11-16:
Goal Assertion from verification condition f'vc.
Prover result is: Step limit exceeded (0.77s).
The contracts of some function or loop are underspecified, for example during
  the following execution:
File int.mlw:
  Line 13:
    Constant zero initialization
    zero = 0
  Line 14:
    Constant one initialization
    one = 1
File anonymous2.mlw:
  Line 3:
    Constant z initialization
    (abstract) execution of unimplemented function``
    result = 0
    Concrete execution of function `ref` with args:
      contents = 0
    Concrete execution of function `ref'mk` with args:
      contents = 0
    z = {contents= 0}
  Line 5:
    x = 1
    x = 1
    Execution of main function `f` with env:
      z = {contents= 0}
      x = 1
      zero = 0
      one = 1
  Line 8:
    Abstract execution of function `h` with args:
      y = 1
    z = {contents= 0}
    result = ()
  Line 9:
    Property failure, assertion with:
      z = {contents= 0}

